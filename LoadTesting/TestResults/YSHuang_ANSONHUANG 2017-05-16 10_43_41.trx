<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="63bb2c65-746e-421c-8953-3ab537b38c9c" name="YSHuang@ANSONHUANG 2017-05-16 10:43:41" runUser="AnsonHuang\YSHuang" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="本機" id="f0316326-3a07-479d-8058-64131c18b509">
    <Description>這些是本機測試回合的預設測試設定。</Description>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Deployment runDeploymentRoot="YSHuang_ANSONHUANG 2017-05-16 10_43_41" />
  </TestSettings>
  <Times creation="2017-05-16T10:43:41.9102547+08:00" queuing="2017-05-16T10:43:42.0567651+08:00" start="2017-05-16T10:43:42.1422651+08:00" finish="2017-05-16T10:43:53.2717651+08:00" />
  <ResultSummary outcome="Completed">
    <Counters total="1" executed="1" passed="1" error="0" failed="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTest1" storage="d:\git\attendant\loadtesting\loadtesting\webtest1.webtest" id="32b3eb7f-657d-48cc-acc9-b304c0cd482c" persistedWebTest="">
      <Execution id="994f72f5-9bad-4f6b-aee2-035593b17436" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="不在清單中的結果" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="所有載入的結果" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="32b3eb7f-657d-48cc-acc9-b304c0cd482c" executionId="994f72f5-9bad-4f6b-aee2-035593b17436" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="994f72f5-9bad-4f6b-aee2-035593b17436" testId="32b3eb7f-657d-48cc-acc9-b304c0cd482c" testName="WebTest1" computerName="ANSONHUANG" duration="00:00:00.4873311" startTime="2017-05-16T10:43:42.1892651+08:00" endTime="2017-05-16T10:43:53.2607651+08:00" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="994f72f5-9bad-4f6b-aee2-035593b17436">
      <ResultFiles>
        <ResultFile path="WebTest1.webtestResult" />
      </ResultFiles>
      <TestSettings name="本機" id="f0316326-3a07-479d-8058-64131c18b509">
        <Description>這些是本機測試回合的預設測試設定。</Description>
        <Execution>
          <TestTypeSpecific>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 7.0">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="Execution Agents">
          </AgentRule>
        </Execution>
        <Deployment runDeploymentRoot="YSHuang_ANSONHUANG 2017-05-16 10_43_41" />
      </TestSettings>
      <WebTestResultFilePath>YSHuang_ANSONHUANG 2017-05-16 10_43_41\In\994f72f5-9bad-4f6b-aee2-035593b17436\WebTest1.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>