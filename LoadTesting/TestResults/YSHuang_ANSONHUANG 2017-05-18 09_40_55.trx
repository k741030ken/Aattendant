<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="479cd17a-b8f2-4d57-8463-c12ed36a5973" name="YSHuang@ANSONHUANG 2017-05-18 09:40:55" runUser="AnsonHuang\YSHuang" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="本機" id="f0316326-3a07-479d-8058-64131c18b509">
    <Description>這些是本機測試回合的預設測試設定。</Description>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Deployment runDeploymentRoot="YSHuang_ANSONHUANG 2017-05-18 09_40_55" />
  </TestSettings>
  <Times creation="2017-05-18T09:40:55.0407295+08:00" queuing="2017-05-18T09:40:56.8422295+08:00" start="2017-05-18T09:40:56.9607295+08:00" finish="2017-05-18T09:41:08.5652295+08:00" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTestSelectCase02" storage="d:\git\attendant\loadtesting\loadtesting\webtestselectcase02.webtest" id="32b3eb7f-657d-48cc-acc9-b304c0cd482c" persistedWebTest="">
      <Execution id="83a8f096-d70c-4585-b297-eb770705a353" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="不在清單中的結果" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="所有載入的結果" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="32b3eb7f-657d-48cc-acc9-b304c0cd482c" executionId="83a8f096-d70c-4585-b297-eb770705a353" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="83a8f096-d70c-4585-b297-eb770705a353" testId="32b3eb7f-657d-48cc-acc9-b304c0cd482c" testName="WebTestSelectCase02" computerName="ANSONHUANG" duration="00:00:00.9610452" startTime="2017-05-18T09:40:56.9977295+08:00" endTime="2017-05-18T09:41:08.5487295+08:00" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="83a8f096-d70c-4585-b297-eb770705a353">
      <Output>
        <ErrorInfo>
          <Message>3 項主要要求、0 項相依要求及 0 項條件式規則失敗</Message>
        </ErrorInfo>
      </Output>
      <ResultFiles>
        <ResultFile path="WebTestSelectCase02.webtestResult" />
      </ResultFiles>
      <TestSettings name="本機" id="f0316326-3a07-479d-8058-64131c18b509">
        <Description>這些是本機測試回合的預設測試設定。</Description>
        <Execution>
          <TestTypeSpecific>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 7.0">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="Execution Agents">
          </AgentRule>
        </Execution>
        <Deployment runDeploymentRoot="YSHuang_ANSONHUANG 2017-05-18 09_40_55" />
      </TestSettings>
      <WebTestResultFilePath>YSHuang_ANSONHUANG 2017-05-18 09_40_55\In\83a8f096-d70c-4585-b297-eb770705a353\WebTestSelectCase02.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>