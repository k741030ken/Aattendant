<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="bebd54c2-42a5-4c0d-8412-0448ceadac57" name="YSHuang@ANSONHUANG 2017-05-16 11:16:57" runUser="AnsonHuang\YSHuang" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="本機" id="f0316326-3a07-479d-8058-64131c18b509">
    <Description>這些是本機測試回合的預設測試設定。</Description>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Deployment runDeploymentRoot="YSHuang_ANSONHUANG 2017-05-16 11_16_57" />
  </TestSettings>
  <Times creation="2017-05-16T11:16:57.9854413+08:00" queuing="2017-05-16T11:16:58.1134669+08:00" start="2017-05-16T11:16:58.2044851+08:00" finish="2017-05-16T11:17:10.7995036+08:00" />
  <ResultSummary outcome="Completed">
    <Counters total="1" executed="1" passed="1" error="0" failed="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTestUpdateCase01" storage="d:\git\attendant\loadtesting\loadtesting\webtestupdatecase01.webtest" id="d1f0dc6a-f347-4b33-8582-0a71909fcaf1" persistedWebTest="">
      <Execution id="37ad19c8-f396-4b05-b6dc-22dd73dbfd8c" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="不在清單中的結果" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="所有載入的結果" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="d1f0dc6a-f347-4b33-8582-0a71909fcaf1" executionId="37ad19c8-f396-4b05-b6dc-22dd73dbfd8c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="37ad19c8-f396-4b05-b6dc-22dd73dbfd8c" testId="d1f0dc6a-f347-4b33-8582-0a71909fcaf1" testName="WebTestUpdateCase01" computerName="ANSONHUANG" duration="00:00:01.8495403" startTime="2017-05-16T11:16:58.2414925+08:00" endTime="2017-05-16T11:17:10.7434924+08:00" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="37ad19c8-f396-4b05-b6dc-22dd73dbfd8c">
      <ResultFiles>
        <ResultFile path="WebTestUpdateCase01.webtestResult" />
      </ResultFiles>
      <TestSettings name="本機" id="f0316326-3a07-479d-8058-64131c18b509">
        <Description>這些是本機測試回合的預設測試設定。</Description>
        <Execution>
          <TestTypeSpecific>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 7.0">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="Execution Agents">
          </AgentRule>
        </Execution>
        <Deployment runDeploymentRoot="YSHuang_ANSONHUANG 2017-05-16 11_16_57" />
      </TestSettings>
      <WebTestResultFilePath>YSHuang_ANSONHUANG 2017-05-16 11_16_57\In\37ad19c8-f396-4b05-b6dc-22dd73dbfd8c\WebTestUpdateCase01.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>