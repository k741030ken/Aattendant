<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="b18effe2-3d16-47d8-bfa5-0ed4ee2b9a7c" name="YSHuang@ANSONHUANG 2017-05-16 11:28:28" runUser="AnsonHuang\YSHuang" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="本機" id="f0316326-3a07-479d-8058-64131c18b509">
    <Description>這些是本機測試回合的預設測試設定。</Description>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Deployment runDeploymentRoot="YSHuang_ANSONHUANG 2017-05-16 11_28_28" />
  </TestSettings>
  <Times creation="2017-05-16T11:28:28.7330777+08:00" queuing="2017-05-16T11:28:28.8666044+08:00" start="2017-05-16T11:28:28.9576226+08:00" finish="2017-05-16T11:28:41.7431792+08:00" />
  <ResultSummary outcome="Completed">
    <Counters total="1" executed="1" passed="1" error="0" failed="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTest1" storage="d:\git\attendant\loadtesting\loadtesting\webtest1.webtest" id="1265e208-ff74-47d4-bee0-67170f6c4143" persistedWebTest="">
      <Execution id="91d62066-1c07-4bf3-a6d3-812fbaec7268" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="不在清單中的結果" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="所有載入的結果" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="1265e208-ff74-47d4-bee0-67170f6c4143" executionId="91d62066-1c07-4bf3-a6d3-812fbaec7268" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="91d62066-1c07-4bf3-a6d3-812fbaec7268" testId="1265e208-ff74-47d4-bee0-67170f6c4143" testName="WebTest1" computerName="ANSONHUANG" duration="00:00:02.1001053" startTime="2017-05-16T11:28:28.9996310+08:00" endTime="2017-05-16T11:28:41.6931692+08:00" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="91d62066-1c07-4bf3-a6d3-812fbaec7268">
      <ResultFiles>
        <ResultFile path="WebTest1.webtestResult" />
      </ResultFiles>
      <TestSettings name="本機" id="f0316326-3a07-479d-8058-64131c18b509">
        <Description>這些是本機測試回合的預設測試設定。</Description>
        <Execution>
          <TestTypeSpecific>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 7.0">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="Execution Agents">
          </AgentRule>
        </Execution>
        <Deployment runDeploymentRoot="YSHuang_ANSONHUANG 2017-05-16 11_28_28" />
      </TestSettings>
      <WebTestResultFilePath>YSHuang_ANSONHUANG 2017-05-16 11_28_28\In\91d62066-1c07-4bf3-a6d3-812fbaec7268\WebTest1.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>