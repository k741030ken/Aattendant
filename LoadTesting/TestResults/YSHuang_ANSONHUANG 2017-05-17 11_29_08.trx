<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="d7dbfbf4-052d-46ce-b07d-3f7b8fadc771" name="YSHuang@ANSONHUANG 2017-05-17 11:29:08" runUser="AnsonHuang\YSHuang" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="本機" id="f0316326-3a07-479d-8058-64131c18b509">
    <Description>這些是本機測試回合的預設測試設定。</Description>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Deployment runDeploymentRoot="YSHuang_ANSONHUANG 2017-05-17 11_29_08" />
  </TestSettings>
  <Times creation="2017-05-17T11:29:08.4674258+08:00" queuing="2017-05-17T11:29:12.2004258+08:00" start="2017-05-17T11:29:12.3049258+08:00" finish="2017-05-17T11:29:28.0409258+08:00" />
  <ResultSummary outcome="Completed">
    <Counters total="1" executed="1" passed="1" error="0" failed="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTestInsertDeleteCase01" storage="d:\git\attendant\loadtesting\loadtesting\webtestinsertdeletecase01.webtest" id="5bb2bc9f-0fc4-499f-9eb4-d5c514a4ffa9" persistedWebTest="﻿<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<WebTest Name="WebTestInsertDeleteCase01" Id="5bb2bc9f-0fc4-499f-9eb4-d5c514a4ffa9" Owner="" Priority="2147483647" Enabled="True" CssProjectStructure="" CssIteration="" Timeout="0" WorkItemIds="" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010" Description="" CredentialUserName="" CredentialPassword="" PreAuthenticate="True" Proxy="default" StopOnError="False" RecordedResultFile="WebTest1.ca91ccaf-7e2e-4405-9483-d79b70fc9efe.rec.webtestresult" ResultsLocale="">
  <Items>
    <Request Method="GET" Guid="901eb0e2-b103-4207-aa99-4cd850daa7e7" Version="1.1" Url="http://10.11.36.114:8007/hrlogin/hrlogin.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="擷取隱藏欄位" Description="擷取回應中的所有隱藏欄位，並將它們放在測試內容中。">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam125.btnExecute" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="btnExecute" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam126.ddlUICulture" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;正體中" />
            <RuleParameter Name="Index" Value="8" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
    </Request>
    <Request Method="POST" Guid="f1f88de3-47c2-4653-9d0d-352e2b0fc4a5" Version="1.1" Url="http://10.11.36.114:8007/hrlogin/hrlogin.aspx" ThinkTime="26" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <FormPostHttpBody>
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="/wEPDwUKLTQ1NDM1MTA0Mg9kFgICAw9kFgQCAQ8WAh4HVmlzaWJsZWcWBAIBDw8WHh4KX01heExlbmd0aGYeEl9Jc0F1dG9Ub1VwcGVyQ2FzZWgeDF9Jc0FjdGl2ZUlNRWceC19Jc1Bhc3N3b3JkaB4OX1RleHRTaGlmdEtpbmQLKX9TaW5vUGFjLldlYkV4cHJlc3MuQ29tbW9uLlV0aWwrVGV4dFNoaWZ0S2luZCwgU2lub1BhYy5XZWJFeHByZXNzLkNvbW1vbiwgVmVyc2lvbj03LjMuMzEuMSwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1udWxsAB4KX1dhdGVyTWFya2UeCF9Jc0NsZWFyaB4IX1Rvb2xUaXBlHgtfSXNSZWFkT25seWgeCV9Dc3NDbGFzc2UeD19Jc1dpZHRoQnlQaXhlbGceE19Jc0Rpc3BFbnRlcmVkV29yZHNoHgZfV2lkdGgCUB4IX0lzRm9jdXNnHglfSXNSZWdFeHBoZBYEAgEPZBYCAgEPEA9kFgIeB29uY2xpY2sFvwF2YXIgb1ZhbGlkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3R4dFVzZXJJRF9SZXF1aXJlZEZpZWxkVmFsaWRhdG9yMScpO1ZhbGlkYXRvckVuYWJsZShvVmFsaWQsdGhpcy5jaGVja2VkKTtVdGlsX0Noa0JveFRvZ2dsZVZpc2liaWxpdHkoJ3R4dFVzZXJJRF9jaGtWaXNpYmlsaXR5JywgJ3R4dFVzZXJJRF9kaXZEYXRhQXJlYScpO2RkZAIDDxYCHgVzdHlsZQU2ZmxvYXQ6bGVmdDtkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nOjA7dmlzaWJpbGl0eTo7FgYCAQ8PFggeCFJlYWRPbmx5aB4FV2lkdGgbAAAAAAAAVEABAAAAHghDc3NDbGFzc2UeBF8hU0ICggIWAh4Hb25rZXl1cAUOdGhpcy50aXRsZT0nJztkAgMPDxYEHxMbAAAAAAAAVEABAAAAHxUCgAJkZAIFD2QWAgIBDw8WAh4EVGV4dAUXW+Wkp+Wvq+mOluWuml3lt7LllZ/nlKgWAh8RBZQBcGFkZGluZzogMnB4IDEwcHggMnB4IDEwcHg7IGNvbG9yOiMwMDA7IGJhY2tncm91bmQ6ICNGRkU4QTY7IGZvbnQtd2VpZ2h0OiBib2xkOyBib3JkZXI6IDFweCBzb2xpZCBkYXJrZ3JheTsgd2hpdGUtc3BhY2U6IG5vd3JhcDsgYm9yZGVyLXJhZGl1czogM3B4O2QCAw8QDxYGHg5EYXRhVmFsdWVGaWVsZAUDS2V5Hg1EYXRhVGV4dEZpZWxkBQVWYWx1ZR4LXyFEYXRhQm91bmRnZBAVBAdFbmdsaXNoDOeugOS9k+S4reaWhwzmraPpq5TkuK3mlocM566A5L2T5rGJ6K+tFQQCZW4GemgtQ0hTBnpoLUNIVAd6aC1IYW5zFCsDBGdnZ2dkZAIDDw8WAh8XZWRkZCcVRYXTh9jCCMwScw4nRuV09m/9" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN1.__VIEWSTATEGENERATOR}}" RecordedValue="5BB0F290" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{$HIDDEN1.__EVENTVALIDATION}}" RecordedValue="/wEdAAjZzgedK7WHnuKA2o+sVRATZhTqo2ydrcAvVXhVX0KFKYIFfRRZhXsxUy43qfmVgP+LRbqXAr4pXRAx5LgPPFjgeCPFcn5aPMYhB6gel0o/bl3FQ/qnQW2uFoZPnhwrJ1dgzCkpqcXHoLWR+fc8xH3YRrPpGzrD+ZG0Wk4Yrn35Fvkef/tZRg7GcFN37NgKG6UWNPge" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="txtUserID$txtData" Value="102119" RecordedValue="102119" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ddlUICulture" Value="zh-CHT" RecordedValue="zh-CHT" CorrelationBinding="{{FormPostParam126.ddlUICulture}}" UrlEncode="True" />
        <FormPostParameter Name="btnExecute" Value="Local Login" RecordedValue="Local Login" CorrelationBinding="{{FormPostParam125.btnExecute}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Guid="90eac133-96c3-4790-a89c-792471f9da20" Version="1.1" Url="http://10.11.36.114:8007/OverTime/OvertimePreOrder_Add.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="擷取隱藏欄位" Description="擷取回應中的所有隱藏欄位，並將它們放在測試內容中。">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam109.OTEmpID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="rbtSingleEmpID" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam110.txtOTEmpID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtOTEmpID" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam111.txtOTEmpName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtOTEmpName" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam112.ucDateStart$txtDate" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ucDateStart_txtDate" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam113.ucDateEnd$txtDate" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ucDateEnd_txtDate" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam114.txtMealTime" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtMealTime" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam115.__EVENTTARGET" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ame=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; onc" />
            <RuleParameter Name="Index" Value="31" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam116.OTTimeStart$ddlHH" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;00&lt;" />
            <RuleParameter Name="Index" Value="30" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam117.OTTimeStart$ddlMM" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;請選擇" />
            <RuleParameter Name="Index" Value="29" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam118.OTTimeEnd$ddlHH" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;請選擇" />
            <RuleParameter Name="Index" Value="29" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam119.OTTimeEnd$ddlMM" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;請選擇" />
            <RuleParameter Name="Index" Value="29" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam120.ddlOTTypeID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="s&quot;:[&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;1&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam121.ddlOrg" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&quot;0&quot;,&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;2&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam122.ucCascadingDropDown1$ddl02" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="224" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam123.ucCascadingDropDown1$ddl03" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="225" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam124.hiddenInputToUpdateATBuffer_CommonToolkitScripts" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="s&quot;:[&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;1&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
    </Request>
    <Request Method="POST" Guid="3c6ce460-1eae-46e2-9136-06535f88b59c" Version="1.1" Url="http://10.11.36.114:8007/OverTime/OvertimePreOrder_Add.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="擷取隱藏欄位" Description="擷取回應中的所有隱藏欄位，並將它們放在測試內容中。">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam94.OTEmpID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="rbtSingleEmpID" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam95.txtOTEmpID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtOTEmpID" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam96.txtOTEmpName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtOTEmpName" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam97.ucDateStart$txtDate" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ucDateStart_txtDate" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam98.ucDateEnd$txtDate" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ucDateEnd_txtDate" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam99.txtMealTime" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtMealTime" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam100.__EVENTTARGET" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ame=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; onc" />
            <RuleParameter Name="Index" Value="32" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam101.OTTimeStart$ddlHH" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;00&lt;" />
            <RuleParameter Name="Index" Value="30" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam102.OTTimeStart$ddlMM" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;00&lt;" />
            <RuleParameter Name="Index" Value="30" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam103.OTTimeEnd$ddlHH" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;請選擇" />
            <RuleParameter Name="Index" Value="29" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam104.OTTimeEnd$ddlMM" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;請選擇" />
            <RuleParameter Name="Index" Value="29" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam105.ddlOTTypeID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="s&quot;:[&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;1&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam106.ddlOrg" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&quot;0&quot;,&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;2&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam107.ucCascadingDropDown1$ddl03" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; tit" />
            <RuleParameter Name="Index" Value="221" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam108.hiddenInputToUpdateATBuffer_CommonToolkitScripts" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="s&quot;:[&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;1&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <FormPostHttpBody>
        <FormPostParameter Name="ToolkitScriptManager1_HiddenField" Value=";;AjaxControlToolkit, Version=4.1.7.607, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:zh-Hant:7b95ed1a-6a3f-41dd-bc5b-63f39edbc4b4:de1feab2:fcf0e993:f2c8e708:720a52bf:f9cec9bc:589eaa30:698129cf:fb9b4c57:ccb96cf9:8ad18101:ca57ef3c:a67c2700:8613aea7:3202a5a2:ab09e3fe:87104b7c:be6fb298" RecordedValue=";;AjaxControlToolkit, Version=4.1.7.607, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:zh-Hant:7b95ed1a-6a3f-41dd-bc5b-63f39edbc4b4:de1feab2:fcf0e993:f2c8e708:720a52bf:f9cec9bc:589eaa30:698129cf:fb9b4c57:ccb96cf9:8ad18101:ca57ef3c:a67c2700:8613aea7:3202a5a2:ab09e3fe:87104b7c:be6fb298" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="OTTimeStart$ddlHH" RecordedValue="OTTimeStart$ddlHH" CorrelationBinding="{{FormPostParam115.__EVENTTARGET}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VSTATE" Value="{{$HIDDEN1.__VSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="{{$HIDDEN1.__SCROLLPOSITIONX}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="{{$HIDDEN1.__SCROLLPOSITIONY}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEENCRYPTED" Value="{{$HIDDEN1.__VIEWSTATEENCRYPTED}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{$HIDDEN1.__EVENTVALIDATION}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="OTEmpID" Value="rbtSingleEmpID" RecordedValue="rbtSingleEmpID" CorrelationBinding="{{FormPostParam109.OTEmpID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpID" Value="102119" RecordedValue="102119" CorrelationBinding="{{FormPostParam110.txtOTEmpID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpName" Value="廖O義" RecordedValue="廖O義" CorrelationBinding="{{FormPostParam111.txtOTEmpName}}" UrlEncode="True" />
        <FormPostParameter Name="ucDateStart$txtDate" Value="2017/05/16" RecordedValue="2017/05/16" CorrelationBinding="{{FormPostParam112.ucDateStart$txtDate}}" UrlEncode="True" />
        <FormPostParameter Name="ucDateEnd$txtDate" Value="2017/05/16" RecordedValue="2017/05/16" CorrelationBinding="{{FormPostParam113.ucDateEnd$txtDate}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeStart$ddlHH" Value="00" RecordedValue="00" CorrelationBinding="{{FormPostParam116.OTTimeStart$ddlHH}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeStart$ddlMM" Value="請選擇" RecordedValue="請選擇" CorrelationBinding="{{FormPostParam117.OTTimeStart$ddlMM}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeEnd$ddlHH" Value="請選擇" RecordedValue="請選擇" CorrelationBinding="{{FormPostParam118.OTTimeEnd$ddlHH}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeEnd$ddlMM" Value="請選擇" RecordedValue="請選擇" CorrelationBinding="{{FormPostParam119.OTTimeEnd$ddlMM}}" UrlEncode="True" />
        <FormPostParameter Name="chkMealFlag" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="txtMealTime" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam114.txtMealTime}}" UrlEncode="True" />
        <FormPostParameter Name="ddlOTTypeID" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam120.ddlOTTypeID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTReasonMemo$txtData" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ddlOrg" Value="1" RecordedValue="1" CorrelationBinding="{{FormPostParam121.ddlOrg}}" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$ddl02" Value="000G00" RecordedValue="000G00" CorrelationBinding="{{FormPostParam122.ucCascadingDropDown1$ddl02}}" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$ddl03" Value="000G90" RecordedValue="000G90" CorrelationBinding="{{FormPostParam123.ucCascadingDropDown1$ddl03}}" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$ddl04" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown1_ClientState" Value="SPHBK1:::永豐銀行:::" RecordedValue="SPHBK1:::永豐銀行:::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown2_ClientState" Value="000G00:::人力資源處:::" RecordedValue="000G00:::人力資源處:::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown3_ClientState" Value="000G90:::人資數據應用科:::" RecordedValue="000G90:::人資數據應用科:::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown4_ClientState" Value="::::::" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown5_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown1$CascadingDropDown5_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown1_ClientState" Value="::::::" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown2_ClientState" Value="::::::" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown3_ClientState" Value="::::::" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown4_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown4_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown5_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown5_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="frameAttach" Value="/Util/AttachAdmin.aspx?AttachDB=AattendantDB_ITRD&amp;AttachID=test102119d792ddc8-1f0c-4be6-ba06-1bd5280cb29a&amp;AttachFileMaxQty=1&amp;AttachFileMaxKB=3072&amp;AttachFileTotKB=3072&amp;AttachFileExtList=" RecordedValue="/Util/AttachAdmin.aspx?AttachDB=AattendantDB_ITRD&amp;AttachID=test102119d792ddc8-1f0c-4be6-ba06-1bd5280cb29a&amp;AttachFileMaxQty=1&amp;AttachFileMaxKB=3072&amp;AttachFileTotKB=3072&amp;AttachFileExtList=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientWidth" Value="{{$HIDDEN1.ucModalPopup1$ClientWidth}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientHeight" Value="{{$HIDDEN1.ucModalPopup1$ClientHeight}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="hiddenInputToUpdateATBuffer_CommonToolkitScripts" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam124.hiddenInputToUpdateATBuffer_CommonToolkitScripts}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="1f33de0a-b225-4ee7-b503-0e28095e65c6" Version="1.1" Url="http://10.11.36.114:8007/OverTime/OvertimePreOrder_Add.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="擷取隱藏欄位" Description="擷取回應中的所有隱藏欄位，並將它們放在測試內容中。">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam78.OTEmpID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="rbtSingleEmpID" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam79.txtOTEmpID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtOTEmpID" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam80.txtOTEmpName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtOTEmpName" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam81.ucDateStart$txtDate" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ucDateStart_txtDate" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam82.ucDateEnd$txtDate" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ucDateEnd_txtDate" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam83.txtMealTime" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtMealTime" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam84.__EVENTTARGET" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ame=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; onc" />
            <RuleParameter Name="Index" Value="33" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam85.OTTimeStart$ddlHH" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;00&lt;" />
            <RuleParameter Name="Index" Value="30" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam86.OTTimeStart$ddlMM" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;00&lt;" />
            <RuleParameter Name="Index" Value="30" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam87.OTTimeEnd$ddlHH" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;01&lt;" />
            <RuleParameter Name="Index" Value="31" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam88.OTTimeEnd$ddlMM" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;請選擇" />
            <RuleParameter Name="Index" Value="29" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam89.ddlOTTypeID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="s&quot;:[&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;1&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam90.ddlOrg" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&quot;0&quot;,&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;2&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam91.ucCascadingDropDown1$ddl02" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; tit" />
            <RuleParameter Name="Index" Value="220" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam92.ucCascadingDropDown1$ddl03" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; tit" />
            <RuleParameter Name="Index" Value="221" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam93.hiddenInputToUpdateATBuffer_CommonToolkitScripts" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="s&quot;:[&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;1&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <FormPostHttpBody>
        <FormPostParameter Name="ToolkitScriptManager1_HiddenField" Value=";;AjaxControlToolkit, Version=4.1.7.607, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:zh-Hant:7b95ed1a-6a3f-41dd-bc5b-63f39edbc4b4:de1feab2:fcf0e993:f2c8e708:720a52bf:f9cec9bc:589eaa30:698129cf:fb9b4c57:ccb96cf9:8ad18101:ca57ef3c:a67c2700:8613aea7:3202a5a2:ab09e3fe:87104b7c:be6fb298" RecordedValue=";;AjaxControlToolkit, Version=4.1.7.607, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:zh-Hant:7b95ed1a-6a3f-41dd-bc5b-63f39edbc4b4:de1feab2:fcf0e993:f2c8e708:720a52bf:f9cec9bc:589eaa30:698129cf:fb9b4c57:ccb96cf9:8ad18101:ca57ef3c:a67c2700:8613aea7:3202a5a2:ab09e3fe:87104b7c:be6fb298" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="OTTimeStart$ddlMM" RecordedValue="OTTimeStart$ddlMM" CorrelationBinding="{{FormPostParam100.__EVENTTARGET}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VSTATE" Value="{{$HIDDEN1.__VSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="{{$HIDDEN1.__SCROLLPOSITIONX}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="{{$HIDDEN1.__SCROLLPOSITIONY}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEENCRYPTED" Value="{{$HIDDEN1.__VIEWSTATEENCRYPTED}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{$HIDDEN1.__EVENTVALIDATION}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="OTEmpID" Value="rbtSingleEmpID" RecordedValue="rbtSingleEmpID" CorrelationBinding="{{FormPostParam94.OTEmpID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpID" Value="102119" RecordedValue="102119" CorrelationBinding="{{FormPostParam95.txtOTEmpID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpName" Value="廖O義" RecordedValue="廖O義" CorrelationBinding="{{FormPostParam96.txtOTEmpName}}" UrlEncode="True" />
        <FormPostParameter Name="ucDateStart$txtDate" Value="2017/05/16" RecordedValue="2017/05/16" CorrelationBinding="{{FormPostParam97.ucDateStart$txtDate}}" UrlEncode="True" />
        <FormPostParameter Name="ucDateEnd$txtDate" Value="2017/05/16" RecordedValue="2017/05/16" CorrelationBinding="{{FormPostParam98.ucDateEnd$txtDate}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeStart$ddlHH" Value="00" RecordedValue="00" CorrelationBinding="{{FormPostParam101.OTTimeStart$ddlHH}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeStart$ddlMM" Value="00" RecordedValue="00" CorrelationBinding="{{FormPostParam102.OTTimeStart$ddlMM}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeEnd$ddlHH" Value="請選擇" RecordedValue="請選擇" CorrelationBinding="{{FormPostParam103.OTTimeEnd$ddlHH}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeEnd$ddlMM" Value="請選擇" RecordedValue="請選擇" CorrelationBinding="{{FormPostParam104.OTTimeEnd$ddlMM}}" UrlEncode="True" />
        <FormPostParameter Name="chkMealFlag" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="txtMealTime" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam99.txtMealTime}}" UrlEncode="True" />
        <FormPostParameter Name="ddlOTTypeID" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam105.ddlOTTypeID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTReasonMemo$txtData" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ddlOrg" Value="1" RecordedValue="1" CorrelationBinding="{{FormPostParam106.ddlOrg}}" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$ddl03" Value="000G90" RecordedValue="000G90" CorrelationBinding="{{FormPostParam107.ucCascadingDropDown1$ddl03}}" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$ddl04" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown1_ClientState" Value="SPHBK1:::永豐銀行:::" RecordedValue="SPHBK1:::永豐銀行:::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown2_ClientState" Value="000G00:::undefined:::" RecordedValue="000G00:::undefined:::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown3_ClientState" Value="000G90:::人資數據應用科:::" RecordedValue="000G90:::人資數據應用科:::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown4_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown1$CascadingDropDown4_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown5_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown1$CascadingDropDown5_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown1_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown1_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown2_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown2_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown3_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown3_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown4_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown4_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown5_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown5_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="frameAttach" Value="/Util/AttachAdmin.aspx?AttachDB=AattendantDB_ITRD&amp;AttachID=test102119d792ddc8-1f0c-4be6-ba06-1bd5280cb29a&amp;AttachFileMaxQty=1&amp;AttachFileMaxKB=3072&amp;AttachFileTotKB=3072&amp;AttachFileExtList=" RecordedValue="/Util/AttachAdmin.aspx?AttachDB=AattendantDB_ITRD&amp;AttachID=test102119d792ddc8-1f0c-4be6-ba06-1bd5280cb29a&amp;AttachFileMaxQty=1&amp;AttachFileMaxKB=3072&amp;AttachFileTotKB=3072&amp;AttachFileExtList=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientWidth" Value="{{$HIDDEN1.ucModalPopup1$ClientWidth}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientHeight" Value="{{$HIDDEN1.ucModalPopup1$ClientHeight}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="hiddenInputToUpdateATBuffer_CommonToolkitScripts" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam108.hiddenInputToUpdateATBuffer_CommonToolkitScripts}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="909aaf9a-3f13-4b2b-a87f-1cb13072f7a4" Version="1.1" Url="http://10.11.36.114:8007/OverTime/OvertimePreOrder_Add.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="擷取隱藏欄位" Description="擷取回應中的所有隱藏欄位，並將它們放在測試內容中。">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam62.OTEmpID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="rbtSingleEmpID" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam63.txtOTEmpID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtOTEmpID" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam64.txtOTEmpName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtOTEmpName" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam65.ucDateStart$txtDate" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ucDateStart_txtDate" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam66.ucDateEnd$txtDate" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ucDateEnd_txtDate" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam67.txtMealTime" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtMealTime" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam68.__EVENTTARGET" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ame=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; onc" />
            <RuleParameter Name="Index" Value="34" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam69.OTTimeStart$ddlHH" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;00&lt;" />
            <RuleParameter Name="Index" Value="30" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam70.OTTimeStart$ddlMM" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;00&lt;" />
            <RuleParameter Name="Index" Value="30" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam71.OTTimeEnd$ddlHH" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;01&lt;" />
            <RuleParameter Name="Index" Value="31" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam72.OTTimeEnd$ddlMM" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;00&lt;" />
            <RuleParameter Name="Index" Value="30" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam73.ddlOTTypeID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="s&quot;:[&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;1&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam74.ddlOrg" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&quot;0&quot;,&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;2&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam75.ucCascadingDropDown1$ddl02" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; tit" />
            <RuleParameter Name="Index" Value="220" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam76.ucCascadingDropDown1$ddl03" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; tit" />
            <RuleParameter Name="Index" Value="221" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam77.hiddenInputToUpdateATBuffer_CommonToolkitScripts" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="s&quot;:[&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;1&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <FormPostHttpBody>
        <FormPostParameter Name="ToolkitScriptManager1_HiddenField" Value=";;AjaxControlToolkit, Version=4.1.7.607, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:zh-Hant:7b95ed1a-6a3f-41dd-bc5b-63f39edbc4b4:de1feab2:fcf0e993:f2c8e708:720a52bf:f9cec9bc:589eaa30:698129cf:fb9b4c57:ccb96cf9:8ad18101:ca57ef3c:a67c2700:8613aea7:3202a5a2:ab09e3fe:87104b7c:be6fb298" RecordedValue=";;AjaxControlToolkit, Version=4.1.7.607, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:zh-Hant:7b95ed1a-6a3f-41dd-bc5b-63f39edbc4b4:de1feab2:fcf0e993:f2c8e708:720a52bf:f9cec9bc:589eaa30:698129cf:fb9b4c57:ccb96cf9:8ad18101:ca57ef3c:a67c2700:8613aea7:3202a5a2:ab09e3fe:87104b7c:be6fb298" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="OTTimeEnd$ddlHH" RecordedValue="OTTimeEnd$ddlHH" CorrelationBinding="{{FormPostParam84.__EVENTTARGET}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VSTATE" Value="{{$HIDDEN1.__VSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="{{$HIDDEN1.__SCROLLPOSITIONX}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="{{$HIDDEN1.__SCROLLPOSITIONY}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEENCRYPTED" Value="{{$HIDDEN1.__VIEWSTATEENCRYPTED}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{$HIDDEN1.__EVENTVALIDATION}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="OTEmpID" Value="rbtSingleEmpID" RecordedValue="rbtSingleEmpID" CorrelationBinding="{{FormPostParam78.OTEmpID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpID" Value="102119" RecordedValue="102119" CorrelationBinding="{{FormPostParam79.txtOTEmpID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpName" Value="廖O義" RecordedValue="廖O義" CorrelationBinding="{{FormPostParam80.txtOTEmpName}}" UrlEncode="True" />
        <FormPostParameter Name="ucDateStart$txtDate" Value="2017/05/16" RecordedValue="2017/05/16" CorrelationBinding="{{FormPostParam81.ucDateStart$txtDate}}" UrlEncode="True" />
        <FormPostParameter Name="ucDateEnd$txtDate" Value="2017/05/16" RecordedValue="2017/05/16" CorrelationBinding="{{FormPostParam82.ucDateEnd$txtDate}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeStart$ddlHH" Value="00" RecordedValue="00" CorrelationBinding="{{FormPostParam85.OTTimeStart$ddlHH}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeStart$ddlMM" Value="00" RecordedValue="00" CorrelationBinding="{{FormPostParam86.OTTimeStart$ddlMM}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeEnd$ddlHH" Value="01" RecordedValue="01" CorrelationBinding="{{FormPostParam87.OTTimeEnd$ddlHH}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeEnd$ddlMM" Value="請選擇" RecordedValue="請選擇" CorrelationBinding="{{FormPostParam88.OTTimeEnd$ddlMM}}" UrlEncode="True" />
        <FormPostParameter Name="chkMealFlag" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="txtMealTime" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam83.txtMealTime}}" UrlEncode="True" />
        <FormPostParameter Name="ddlOTTypeID" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam89.ddlOTTypeID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTReasonMemo$txtData" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ddlOrg" Value="1" RecordedValue="1" CorrelationBinding="{{FormPostParam90.ddlOrg}}" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$ddl02" Value="000G00" RecordedValue="000G00" CorrelationBinding="{{FormPostParam91.ucCascadingDropDown1$ddl02}}" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$ddl03" Value="000G90" RecordedValue="000G90" CorrelationBinding="{{FormPostParam92.ucCascadingDropDown1$ddl03}}" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$ddl04" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown1_ClientState" Value="SPHBK1:::永豐銀行:::" RecordedValue="SPHBK1:::永豐銀行:::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown2_ClientState" Value="000G00:::人力資源處:::" RecordedValue="000G00:::人力資源處:::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown3_ClientState" Value="000G90:::人資數據應用科:::" RecordedValue="000G90:::人資數據應用科:::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown4_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown1$CascadingDropDown4_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown5_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown1$CascadingDropDown5_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown1_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown1_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown2_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown2_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown3_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown3_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown4_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown4_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown5_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown5_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="frameAttach" Value="/Util/AttachAdmin.aspx?AttachDB=AattendantDB_ITRD&amp;AttachID=test102119d792ddc8-1f0c-4be6-ba06-1bd5280cb29a&amp;AttachFileMaxQty=1&amp;AttachFileMaxKB=3072&amp;AttachFileTotKB=3072&amp;AttachFileExtList=" RecordedValue="/Util/AttachAdmin.aspx?AttachDB=AattendantDB_ITRD&amp;AttachID=test102119d792ddc8-1f0c-4be6-ba06-1bd5280cb29a&amp;AttachFileMaxQty=1&amp;AttachFileMaxKB=3072&amp;AttachFileTotKB=3072&amp;AttachFileExtList=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientWidth" Value="{{$HIDDEN1.ucModalPopup1$ClientWidth}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientHeight" Value="{{$HIDDEN1.ucModalPopup1$ClientHeight}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="hiddenInputToUpdateATBuffer_CommonToolkitScripts" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam93.hiddenInputToUpdateATBuffer_CommonToolkitScripts}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="df1d993a-c541-4a85-bfac-a95b647cf577" Version="1.1" Url="http://10.11.36.114:8007/OverTime/OvertimePreOrder_Add.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="擷取隱藏欄位" Description="擷取回應中的所有隱藏欄位，並將它們放在測試內容中。">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam47.btnTempSave" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="btnTempSave" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam48.OTEmpID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="rbtSingleEmpID" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam49.txtOTEmpID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtOTEmpID" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam50.txtOTEmpName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtOTEmpName" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam51.ucDateStart$txtDate" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ucDateStart_txtDate" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam52.ucDateEnd$txtDate" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ucDateEnd_txtDate" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam53.OTTimeStart$ddlHH" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;00&lt;" />
            <RuleParameter Name="Index" Value="30" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam54.OTTimeStart$ddlMM" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;00&lt;" />
            <RuleParameter Name="Index" Value="30" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam55.OTTimeEnd$ddlHH" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;01&lt;" />
            <RuleParameter Name="Index" Value="31" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam56.OTTimeEnd$ddlMM" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;00&lt;" />
            <RuleParameter Name="Index" Value="30" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam57.ddlOTTypeID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;10&lt;" />
            <RuleParameter Name="Index" Value="40" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam58.ddlOrg" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&quot;0&quot;,&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;2&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam59.ucCascadingDropDown1$ddl02" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; tit" />
            <RuleParameter Name="Index" Value="220" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam60.ucCascadingDropDown1$ddl03" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; tit" />
            <RuleParameter Name="Index" Value="221" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam61.hiddenInputToUpdateATBuffer_CommonToolkitScripts" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="s&quot;:[&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;1&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <FormPostHttpBody>
        <FormPostParameter Name="ToolkitScriptManager1_HiddenField" Value=";;AjaxControlToolkit, Version=4.1.7.607, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:zh-Hant:7b95ed1a-6a3f-41dd-bc5b-63f39edbc4b4:de1feab2:fcf0e993:f2c8e708:720a52bf:f9cec9bc:589eaa30:698129cf:fb9b4c57:ccb96cf9:8ad18101:ca57ef3c:a67c2700:8613aea7:3202a5a2:ab09e3fe:87104b7c:be6fb298" RecordedValue=";;AjaxControlToolkit, Version=4.1.7.607, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:zh-Hant:7b95ed1a-6a3f-41dd-bc5b-63f39edbc4b4:de1feab2:fcf0e993:f2c8e708:720a52bf:f9cec9bc:589eaa30:698129cf:fb9b4c57:ccb96cf9:8ad18101:ca57ef3c:a67c2700:8613aea7:3202a5a2:ab09e3fe:87104b7c:be6fb298" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="OTTimeEnd$ddlMM" RecordedValue="OTTimeEnd$ddlMM" CorrelationBinding="{{FormPostParam68.__EVENTTARGET}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VSTATE" Value="{{$HIDDEN1.__VSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="{{$HIDDEN1.__SCROLLPOSITIONX}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="{{$HIDDEN1.__SCROLLPOSITIONY}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEENCRYPTED" Value="{{$HIDDEN1.__VIEWSTATEENCRYPTED}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{$HIDDEN1.__EVENTVALIDATION}}" RecordedValue="pil89qh1G/59IsXGhKkWy2utcgUMFC31Jo8BJFM47tLuF0ZdxuizZxca7Fa3OkLQROs9Vy+1fFYmRP0xjpPbdpc7gVbwknQG2idZ37fostn5RJCWAIlEatEDZqwPEKdcbiinnxobzL7gRMidE5PZ9aUrMnI4BdAwwH2DUMNhFSOzV8mYJYkK5vPLoZZzsmbdAp1Vdxmi9VZky2GU9l4IQcd7dfYCO+8ok8egu1sLEBmMp7dun8Yvg1emf23hyIxkyvE0Cs/yPU+1ZrHtvN0L3OACtFdzgmWODre9ICABjYDoC21y4fN+fgs6g0StCYueF+fevTLZEQmsP3cup5o0VdkP++xjcUgS6cppsnMQvQvn5YrEMDmj0E1Wq7eGUx/qXr4XGhPZA6ltbjYT1W6p2Xilyfi63ZOo2mDYNg5+l/LvP73wWXtF8dIt0EZJclvpzc8zPwumAVFuaFBpxUdJZEceL3+Qwa6E9rBwpfSkvzwMccLgsolZ4UhfLvRZmoj7XonbXFAxTXmSTulR/wwEbZDuvjLlrf8/G1na0HkgvETkOuhbU6AL5Jxmp/NeT79JM5BJWETvX+AuBuk7fUHkQoyIzVOYdWEFhtTBoOSk+ZkpTDwYjrqze0n8W77SnuywEMdt/qOTPjoF7fGbYplC+x/qRScFfmiVRhGN6AGoOwMSFJsceAv6B4fecyBI23QNgAIK7WanpuURUU7+s7PXNxp3vu5/TfKybU4LOGrzDvJl2rNRTRIYCUIJtkbHQWavvlAiMH7VMLelBs7DuEn4XDLPLVGQFotn7zJvPAH/Q0lEpq9Oc9fwV8o/rGoVrA/6F1zOw7c0z6kMjbkOmq3bhMhqZ/jveHerFCbfyitiI9SnXtWszXy9P3cJtzPU8AH8RJPi6vc5H9PjT8R1gpd060wUtFjzfAluDafBuWTrvm3EE05ifLOemW+W7R0m6sTJolvj4nP55DAmIO8RfVzK6DM4I4pChfuYTLqXAclPDVJfR/D4d/FfmqyvRoUO818mMKt6nL7i1vOsFWPU8qcigrsqXP5CEDyYNDbnG4cAiXbDBL7is3qJSpKVRnv5S7ULETvpIIgrRYQFwV8tLfx/kmCXtFVGjC4vJ1jANyL3qFM2dv9TzvWP8dQhOTrsncxw5x5k9mhJzwA62npA8jf2GhAbDfCxSZ8ni7LyqFgLYhUX2B+q0bC6v3sTNqgeeVLh7cW7pWx7j9bNEWkj3FYxTPL+ezUp7ivK18vgEg3U5OV5VO/9ebFFdHxkA9EXdJsI1167LWsdfgN0vX0boDVAGJjtdjL5uN1tvDk6sYLW36hDUOzzMU9obyvHCxA+UXKyQ5amIqPPh+oRs1vpaLiH5Skruz3nfUK82vHb4NhIGIA6wOpWP/F3eWrU9UZjCHVH5Y8lwIRl4W1H4FJhLlwsUqewGvjmhtrzwXPMx9jXNR3Zt3DnLeR+DFiph8WnsKhKamCNsR5JXKEJfVg9JNzbw5jBE4YQcpIqVVHYQbyrOY76evOESEewJivmniriYTEqD1ASpO7eBBvO2E0Wc7q4e2rZaTnaBxpzJuJtV2Ioq/T0by1XAf6W7t2ke9ltmi85u6VHoXWpO9BQNgVRxNPxcTzsiUVRsizbHwt2l9O68xGHzJNjyuNyighfDj3xoqHPvsD9Wt9QpVCSD6X6UMVWrsVv9IjvCaIPYVQt1MT5w4NEL9/II0K2uMV6N1dkKCycFsYbILxdWX9W+HgPJoAzuVLa9T0u90owom873yQ5JXN9G/Zx289MSSNCoivaJxOkAdqz8N+pFpXD2ZWngRAvdsJ4DazPm00gOxpEbugQe/Pl52SHut9ap8AbqHxehsrok+hzGMRzuwXd3A9a8vXsbxsG4xFKPWFCfFNgC0DdwOtqX59VUxfqehMULY1bzWktKx/gK9c6h4UsWIoRyfJAEQ2nS4BniI2zalsTmuXV/MGr4I6WGQN1ZQii62KRsPzgsRroLdW2TvfiSI303xIHIydmNEv0W84TIpHmzJnxDtumk/fjGG0D4NE1IyCYRUwDGxfPlTl28q+57kn6VI9Gfpyb8q5YDrz4W8hkYUJQuzNTKpACjCYQagnbAMiuUvUEQmhXv/Plz5BBG3n39At0hJBDLqHBe4mEWclMkN914axHXdr7JwXt+pv6n7YmtpenDjFzt69wdecoAVhjw6uu1AzReqQXXdzV2i1zQieRRsCDAUhDX+ewXJyg0pTenLItL9c2iD+k6uFv1GONCYRhcbPNUwrDqq13D3SAzzCp+S5pIiK5GOBP3oyqNP3iDNTbMtrevaWw93N6GSjZk8Q+B+miZUmBOs7FjJ+Dnt1MC+foTR1l4EGeSY2EXj3PQMO6qzSRbnbRgFIXvGarwO656F/t8aeMx0R0fsYxb7dxs6FKHuXZ5ifc2/KBOMyNxO8Cq4et7qrYdkI9C7QmiqBt4o0neA9MuVEK3QQEq5iXY5L11bxsmhA9Zc0cS0/hccyV+dKrTGXqaIFEEzw4YAQBsoWs4wVOp970XTyVtnNd2fSlA3i6dWQ0jrbD5e5Cy0K4BW6lnyqKGIRqFGhj90ejfY76DO+YFlVBpaGu3gq1k4tloAOp4mPmYG07F04Xw7cr5ILAOTrkapgTvWTvn52rGXA0g6iSP6geLN2TavXUYtgV0lJorRQFpPFbLyI/ElmkrcAQNqG25nlS360S9IdLB2OhGdKQ5YS/cUprkm26kSdMxrw/OeldOyHGAdA16CvjZL2G0lS7i3tZWjJP/lQa9UevJSSF/jHwJTs2I3/snTEHHdZgydra0pvK0WbjqAMrhktotplCw84+Nr5MsNQ1Logm+ijWk5u/VpKb8ZJ25huuXY/vVlZfR68/45Cm+VfknZ1FNdcFQjHYaYNl4sFCoWgu0+RS440YPvOU78czxuNqES4wLgqQ2ra6BdpW+u0Eh6UQVWx3LLNDmd4D3Gb5UHyf577xNf/VKVmbgdjA3MmssHVkonMhrirwcrlj3w4OycTzA5zyu6H91JXJ5UdcBgYyTQgmttu77czaMZzB3kOJoZN2NwBeyYdrQIDBiRvDQoQ1oBmHln3KOM9QEAVUjFpC3nNaYsY3ZJyyeee/O41t75j8PZngYFlSizGlfIsVDUfiupmsm36jyovaY3V8leZjyl2LgcloyVBR89PXjkD2pmzKSmlsdDqV9tdmCH7hYBmA2u3kGWW9P8BAzi3DOG9JQrL2CucD58E0Lmx0fn/Tyr6oQqYdrdhy5i7ycdnHqsfquLDlfyMkSyuPpXGL1SQwl0KkIakCdI3IS8oGf56cLWWdmAN+TP12m0qNaNkxyNb2oVefTUokbqS4TxrrYyS0EyMeecX5Yz3Uxo6t3fVgomuYo5LX99Grq9cQyy8p/Tcqx2qDJv1tFRjx6p/X6fIxxFyCTLkV+Pt5SCEwMdkYHwseJWfad4cWV1S/LUKO1NfV4N/Zf5+hU3pM1QPhspbWadIcQaiN9TsHQmL+H2jPMO1QZmrsNP6YKLXxYLp+SgGsXMIuAvJlT5x4pCTGogJiFuvgNAH2KJE0N8+HD6v20gvOgg4lG4TCCGRhOoTtTHjOgoIT4AItQ4M1ZZYV9LocnLkYqgguJLM4TLkFrx+G2ReHDPneKzFtmItdO9UOv9w9R54QbbM0PqGRSBry/3PgHnLjiMS9ohAYbyzrJWc9/iKItMOOwevXQMKg3p/NRHLBhWrzBafgy6hhR/HN9ZgBf0ck9jwk9Z8Iz6YVV8tH+sQmZGJVmZQt/6AF6ryS8Zz6GAsgg8qbuDitQLx3xRlpFyIGSnUqNNF3NdFIrEysBCtCZ6MIlIaBoXxIFmGhA6rE7SvUJIjQ8FN9jI0wiDM/7iHBefoBp5e6mbMSYKp++pLOAarQ4F/Uz9Iac+aHqpEHqJBJYosILpS0rVZ+WlM8mrRX8Hi4di6tIq0hIWr0IUYm8x+uQbBM0HhFMKnoTYQohFIzJ277RJl0URO3lWqB0wUmGEtZep0a8x8EFXth3+mcI3VJyuyPwIYnG0EpAl2pPO/nrpyhQEY2Kn2fhtacNINcwOk2Oj9H+CrUMEb7mrXC9kiDs2gmoBaJSBsyh6hgcPzqOrz3uk5EXm8S4OoltReFh3TbpwQcoqvFjDV9ajsFnGF2q1huBvQnm0L7hiF3OfBcsEm0BX+wpT7lMXqMwAiS+f7Dpss46aU17K1EEtGb1a6LFNLdP9SyFKzHlF89CLJ+4BiKXp1wMYYlmf8ISAjdc3BldFmR7Tubpjk+La2leDh2qI6ECdWAphNTx8YjvYYy/ljV/H9SiCDfFVeq866+dYQXN3ILcBdzKwvH6LHBD8TQXFyri2X7IYHjTQ6wyRGFKXY74r9ZRcj1dhRexN4DDfjA2vjULe3KxsWbtSZFXKWl52Rdigok+1E3uXaMBVcgWJDXT+BAullBHpEt6PpcPFXkA860m6eGGCjRK5i+dAmJPv46BB5WqRFTW2JdVq+YtMF90x9MKoEwdjjzvdXBdqL7OSDUEXvEOAZGalx2hdv0Xaz7OeEyRKUQZ7wfxhBB+uPlTpXR3m7ah2gFPJn4MWS1pVNiod2XtMj2Ylp0tFNYxpt+VSz/Z2Q8Xz21e5SqWGETxRSzv0P5qv1nV7wpyo26Z8fVqeyN4pCC9ZSSOA1OKzlvTUFGjUWRiX7AA/f0Icx120vxnT6WCG0MMNfR7Gq5ZHRTfrsphNr7M2Iik9oC1sn4P5ap9l272QEPeL5xOraHPP7xmTibSH9CbIMkC/btR6bOlQoZX35th8+8FhavPROIp+gocRw3gxfJHxYrc2eeGHVQsKm8DD+QUMAI5+Bfo9mFC3TKePNo1Df1LDtNkM+ChIgPs5QRI2WdiqZY0osmelxJsJMDaQ/B+7xSAMaPOZ8O+kDHZJjoo9ULR5QK1XQq4/1plU+egjHtUwGtW/KACWCo7FmKSSiEoeQwWwIwehL8Xlr6Oq74SCI/BvPZdQr3k55h1hdvPUw8SPeP5NMfKZ4h+8tBbfwpVP6j1FFUgVus1QTZYyN7KV5NXlJNko9xt1saC+YSaa1r2NuE8LKj2S1DpFnLumjHwCV8Dc2T63vjX6NolD/9jc1Y+JI+TvZYatLfQFaplFD7pVXHEpYkgmI7hoDqlaB5U2j9IiCRjBjgNcjc4YDOFL48OKJO8UeN6MRfi8UydEmql4Y44fhNMEgEaOtVjsRfzPAZlsfl5JlJ9IDxrsgBRZ2YVN8AXpWL9x8/MkzWH8dYb/yzPxJTIC6NEke1oTErLKS8QUPXFzTc6SLoMf9U0u0eadUV/ozSMUZEjaD3lEViOw2lV+TIQcik0HXMui7K5uE=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="OTEmpID" Value="rbtSingleEmpID" RecordedValue="rbtSingleEmpID" CorrelationBinding="{{FormPostParam62.OTEmpID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpID" Value="102119" RecordedValue="102119" CorrelationBinding="{{FormPostParam63.txtOTEmpID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpName" Value="廖O義" RecordedValue="廖O義" CorrelationBinding="{{FormPostParam64.txtOTEmpName}}" UrlEncode="True" />
        <FormPostParameter Name="ucDateStart$txtDate" Value="2017/05/16" RecordedValue="2017/05/16" CorrelationBinding="{{FormPostParam65.ucDateStart$txtDate}}" UrlEncode="True" />
        <FormPostParameter Name="ucDateEnd$txtDate" Value="2017/05/16" RecordedValue="2017/05/16" CorrelationBinding="{{FormPostParam66.ucDateEnd$txtDate}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeStart$ddlHH" Value="00" RecordedValue="00" CorrelationBinding="{{FormPostParam69.OTTimeStart$ddlHH}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeStart$ddlMM" Value="00" RecordedValue="00" CorrelationBinding="{{FormPostParam70.OTTimeStart$ddlMM}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeEnd$ddlHH" Value="01" RecordedValue="01" CorrelationBinding="{{FormPostParam71.OTTimeEnd$ddlHH}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeEnd$ddlMM" Value="00" RecordedValue="00" CorrelationBinding="{{FormPostParam72.OTTimeEnd$ddlMM}}" UrlEncode="True" />
        <FormPostParameter Name="chkMealFlag" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="txtMealTime" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam67.txtMealTime}}" UrlEncode="True" />
        <FormPostParameter Name="ddlOTTypeID" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam73.ddlOTTypeID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTReasonMemo$txtData" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ddlOrg" Value="1" RecordedValue="1" CorrelationBinding="{{FormPostParam74.ddlOrg}}" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$ddl02" Value="000G00" RecordedValue="000G00" CorrelationBinding="{{FormPostParam75.ucCascadingDropDown1$ddl02}}" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$ddl03" Value="000G90" RecordedValue="000G90" CorrelationBinding="{{FormPostParam76.ucCascadingDropDown1$ddl03}}" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$ddl04" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown1_ClientState" Value="SPHBK1:::永豐銀行:::" RecordedValue="SPHBK1:::永豐銀行:::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown2_ClientState" Value="000G00:::人力資源處:::" RecordedValue="000G00:::人力資源處:::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown3_ClientState" Value="000G90:::人資數據應用科:::" RecordedValue="000G90:::人資數據應用科:::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown4_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown1$CascadingDropDown4_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown5_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown1$CascadingDropDown5_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown1_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown1_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown2_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown2_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown3_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown3_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown4_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown4_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown5_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown5_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="frameAttach" Value="/Util/AttachAdmin.aspx?AttachDB=AattendantDB_ITRD&amp;AttachID=test102119d792ddc8-1f0c-4be6-ba06-1bd5280cb29a&amp;AttachFileMaxQty=1&amp;AttachFileMaxKB=3072&amp;AttachFileTotKB=3072&amp;AttachFileExtList=" RecordedValue="/Util/AttachAdmin.aspx?AttachDB=AattendantDB_ITRD&amp;AttachID=test102119d792ddc8-1f0c-4be6-ba06-1bd5280cb29a&amp;AttachFileMaxQty=1&amp;AttachFileMaxKB=3072&amp;AttachFileTotKB=3072&amp;AttachFileExtList=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientWidth" Value="{{$HIDDEN1.ucModalPopup1$ClientWidth}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientHeight" Value="{{$HIDDEN1.ucModalPopup1$ClientHeight}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="hiddenInputToUpdateATBuffer_CommonToolkitScripts" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam77.hiddenInputToUpdateATBuffer_CommonToolkitScripts}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="3bc677a1-5629-4063-846c-b1a5d5adb5e4" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAIgAsACIAYwBhAHQAZQBnAG8AcgB5ACIAOgAiAEMAbwBtAHAASQBEACIALAAiAGMAbwBuAHQAZQB4AHQASwBlAHkAIgA6ACIASQBzAFIAZQBhAGQATwBuAGwAeQA6AFkAOwBTAGUAbABlAGMAdABlAGQAVgBhAGwAdQBlADoAUwBQAEgAQgBLADEAOwBJAHMAQwBoAGsAVgBhAGwAaQBkADoAWQA7AFYAYQBsAGkAZABLAGUAeQBMAGkAcwB0ADoAOwAiAH0A</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="7c96f471-fc27-4a70-8f04-c96c60565ded" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAQwBvAG0AcABJAEQAOgBTAFAASABCAEsAMQA7ACIALAAiAGMAYQB0AGUAZwBvAHIAeQAiADoAIgBEAGUAcAB0AEkARAAiACwAIgBjAG8AbgB0AGUAeAB0AEsAZQB5ACIAOgAiAEkAcwBSAGUAYQBkAE8AbgBsAHkAOgBOADsAUwBlAGwAZQBjAHQAZQBkAFYAYQBsAHUAZQA6ADAAMAAwAEcAMAAwADsASQBzAEMAaABrAFYAYQBsAGkAZAA6AFkAOwBWAGEAbABpAGQASwBlAHkATABpAHMAdAA6ADsAIgB9AA==</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="606fabbd-f7df-481f-8d1c-730a81129e77" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAQwBvAG0AcABJAEQAOgBTAFAASABCAEsAMQA7AEQAZQBwAHQASQBEADoAMAAwADAARwAwADAAOwAiACwAIgBjAGEAdABlAGcAbwByAHkAIgA6ACIATwByAGcAYQBuAEkARAAiACwAIgBjAG8AbgB0AGUAeAB0AEsAZQB5ACIAOgAiAEkAcwBSAGUAYQBkAE8AbgBsAHkAOgBOADsAUwBlAGwAZQBjAHQAZQBkAFYAYQBsAHUAZQA6ADAAMAAwAEcAOQAwADsASQBzAEMAaABrAFYAYQBsAGkAZAA6AFkAOwBWAGEAbABpAGQASwBlAHkATABpAHMAdAA6ADsAIgB9AA==</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="cb97f292-be57-496b-8d87-8b0d9099184a" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAQwBvAG0AcABJAEQAOgBTAFAASABCAEsAMQA7AEQAZQBwAHQASQBEADoAMAAwADAARwAwADAAOwBPAHIAZwBhAG4ASQBEADoAMAAwADAARwA5ADAAOwAiACwAIgBjAGEAdABlAGcAbwByAHkAIgA6ACIAVQBzAGUAcgBJAEQAIgAsACIAYwBvAG4AdABlAHgAdABLAGUAeQAiADoAIgBJAHMAUgBlAGEAZABPAG4AbAB5ADoATgA7AFMAZQBsAGUAYwB0AGUAZABWAGEAbAB1AGUAOgA7AEkAcwBDAGgAawBWAGEAbABpAGQAOgBZADsAVgBhAGwAaQBkAEsAZQB5AEwAaQBzAHQAOgA7ACIAfQA=</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="f49d6fcb-747c-452d-ab17-0ddcc3635437" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAIgAsACIAYwBhAHQAZQBnAG8AcgB5ACIAOgAiAEMAYQB0AGUAZwBvAHIAeQAwADEAIgAsACIAYwBvAG4AdABlAHgAdABLAGUAeQAiADoAIgBJAHMAUgBlAGEAZABPAG4AbAB5ADoATgA7AFMAZQBsAGUAYwB0AGUAZABWAGEAbAB1AGUAOgA7AEkAcwBDAGgAawBWAGEAbABpAGQAOgBZADsAVgBhAGwAaQBkAEsAZQB5AEwAaQBzAHQAOgA7ACIAfQA=</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="3c082135-2127-4767-beb0-16b75510b72e" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAIgAsACIAYwBhAHQAZQBnAG8AcgB5ACIAOgAiAEMAbwBtAHAASQBEACIALAAiAGMAbwBuAHQAZQB4AHQASwBlAHkAIgA6ACIASQBzAFIAZQBhAGQATwBuAGwAeQA6AFkAOwBTAGUAbABlAGMAdABlAGQAVgBhAGwAdQBlADoAUwBQAEgAQgBLADEAOwBJAHMAQwBoAGsAVgBhAGwAaQBkADoAWQA7AFYAYQBsAGkAZABLAGUAeQBMAGkAcwB0ADoAOwAiAH0A</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="33e26bea-7032-41bb-9687-2e491af4250e" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAQwBvAG0AcABJAEQAOgBTAFAASABCAEsAMQA7ACIALAAiAGMAYQB0AGUAZwBvAHIAeQAiADoAIgBEAGUAcAB0AEkARAAiACwAIgBjAG8AbgB0AGUAeAB0AEsAZQB5ACIAOgAiAEkAcwBSAGUAYQBkAE8AbgBsAHkAOgBOADsAUwBlAGwAZQBjAHQAZQBkAFYAYQBsAHUAZQA6ADAAMAAwAEcAMAAwADsASQBzAEMAaABrAFYAYQBsAGkAZAA6AFkAOwBWAGEAbABpAGQASwBlAHkATABpAHMAdAA6ADsAIgB9AA==</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="144fed91-15cf-4067-bb70-2127c98b1e11" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAQwBvAG0AcABJAEQAOgBTAFAASABCAEsAMQA7AEQAZQBwAHQASQBEADoAMAAwADAARwAwADAAOwAiACwAIgBjAGEAdABlAGcAbwByAHkAIgA6ACIATwByAGcAYQBuAEkARAAiACwAIgBjAG8AbgB0AGUAeAB0AEsAZQB5ACIAOgAiAEkAcwBSAGUAYQBkAE8AbgBsAHkAOgBOADsAUwBlAGwAZQBjAHQAZQBkAFYAYQBsAHUAZQA6ADAAMAAwAEcAOQAwADsASQBzAEMAaABrAFYAYQBsAGkAZAA6AFkAOwBWAGEAbABpAGQASwBlAHkATABpAHMAdAA6ADsAIgB9AA==</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="7556126c-c2c4-415f-86dd-27414fc70e19" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAQwBvAG0AcABJAEQAOgBTAFAASABCAEsAMQA7AEQAZQBwAHQASQBEADoAMAAwADAARwAwADAAOwBPAHIAZwBhAG4ASQBEADoAMAAwADAARwA5ADAAOwAiACwAIgBjAGEAdABlAGcAbwByAHkAIgA6ACIAVQBzAGUAcgBJAEQAIgAsACIAYwBvAG4AdABlAHgAdABLAGUAeQAiADoAIgBJAHMAUgBlAGEAZABPAG4AbAB5ADoATgA7AFMAZQBsAGUAYwB0AGUAZABWAGEAbAB1AGUAOgA6ADoAOgA6ADoAOgA7AEkAcwBDAGgAawBWAGEAbABpAGQAOgBZADsAVgBhAGwAaQBkAEsAZQB5AEwAaQBzAHQAOgA7ACIAfQA=</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="582f02bf-30bb-41f2-ad6d-e330182139b6" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAIgAsACIAYwBhAHQAZQBnAG8AcgB5ACIAOgAiAEMAYQB0AGUAZwBvAHIAeQAwADEAIgAsACIAYwBvAG4AdABlAHgAdABLAGUAeQAiADoAIgBJAHMAUgBlAGEAZABPAG4AbAB5ADoATgA7AFMAZQBsAGUAYwB0AGUAZABWAGEAbAB1AGUAOgA6ADoAOgA6ADoAOgA7AEkAcwBDAGgAawBWAGEAbABpAGQAOgBZADsAVgBhAGwAaQBkAEsAZQB5AEwAaQBzAHQAOgA7ACIAfQA=</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="837bbf89-bfd9-4ea5-a3ef-11b2bed312b8" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAIgAsACIAYwBhAHQAZQBnAG8AcgB5ACIAOgAiAEMAbwBtAHAASQBEACIALAAiAGMAbwBuAHQAZQB4AHQASwBlAHkAIgA6ACIASQBzAFIAZQBhAGQATwBuAGwAeQA6AFkAOwBTAGUAbABlAGMAdABlAGQAVgBhAGwAdQBlADoAUwBQAEgAQgBLADEAOwBJAHMAQwBoAGsAVgBhAGwAaQBkADoAWQA7AFYAYQBsAGkAZABLAGUAeQBMAGkAcwB0ADoAOwAiAH0A</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="6e19bb46-c11d-4e0c-9b23-221829d03bd4" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAQwBvAG0AcABJAEQAOgBTAFAASABCAEsAMQA7ACIALAAiAGMAYQB0AGUAZwBvAHIAeQAiADoAIgBEAGUAcAB0AEkARAAiACwAIgBjAG8AbgB0AGUAeAB0AEsAZQB5ACIAOgAiAEkAcwBSAGUAYQBkAE8AbgBsAHkAOgBOADsAUwBlAGwAZQBjAHQAZQBkAFYAYQBsAHUAZQA6ADAAMAAwAEcAMAAwADsASQBzAEMAaABrAFYAYQBsAGkAZAA6AFkAOwBWAGEAbABpAGQASwBlAHkATABpAHMAdAA6ADsAIgB9AA==</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="a51ec18b-acba-4ad4-94fb-39eea659a29a" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAQwBvAG0AcABJAEQAOgBTAFAASABCAEsAMQA7AEQAZQBwAHQASQBEADoAMAAwADAARwAwADAAOwAiACwAIgBjAGEAdABlAGcAbwByAHkAIgA6ACIATwByAGcAYQBuAEkARAAiACwAIgBjAG8AbgB0AGUAeAB0AEsAZQB5ACIAOgAiAEkAcwBSAGUAYQBkAE8AbgBsAHkAOgBOADsAUwBlAGwAZQBjAHQAZQBkAFYAYQBsAHUAZQA6ADAAMAAwAEcAOQAwADsASQBzAEMAaABrAFYAYQBsAGkAZAA6AFkAOwBWAGEAbABpAGQASwBlAHkATABpAHMAdAA6ADsAIgB9AA==</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="0d04c8b8-a4bb-4e62-8307-db13e359ebea" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAQwBvAG0AcABJAEQAOgBTAFAASABCAEsAMQA7AEQAZQBwAHQASQBEADoAMAAwADAARwAwADAAOwBPAHIAZwBhAG4ASQBEADoAMAAwADAARwA5ADAAOwAiACwAIgBjAGEAdABlAGcAbwByAHkAIgA6ACIAVQBzAGUAcgBJAEQAIgAsACIAYwBvAG4AdABlAHgAdABLAGUAeQAiADoAIgBJAHMAUgBlAGEAZABPAG4AbAB5ADoATgA7AFMAZQBsAGUAYwB0AGUAZABWAGEAbAB1AGUAOgA6ADoAOgA6ADoAOgA7AEkAcwBDAGgAawBWAGEAbABpAGQAOgBZADsAVgBhAGwAaQBkAEsAZQB5AEwAaQBzAHQAOgA7ACIAfQA=</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="8a065415-17b3-4064-ba0a-13903cc393d6" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAIgAsACIAYwBhAHQAZQBnAG8AcgB5ACIAOgAiAEMAYQB0AGUAZwBvAHIAeQAwADEAIgAsACIAYwBvAG4AdABlAHgAdABLAGUAeQAiADoAIgBJAHMAUgBlAGEAZABPAG4AbAB5ADoATgA7AFMAZQBsAGUAYwB0AGUAZABWAGEAbAB1AGUAOgA6ADoAOgA6ADoAOgA7AEkAcwBDAGgAawBWAGEAbABpAGQAOgBZADsAVgBhAGwAaQBkAEsAZQB5AEwAaQBzAHQAOgA7ACIAfQA=</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="060e7748-57f1-48d6-9ed1-bb7dc921aec8" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAIgAsACIAYwBhAHQAZQBnAG8AcgB5ACIAOgAiAEMAbwBtAHAASQBEACIALAAiAGMAbwBuAHQAZQB4AHQASwBlAHkAIgA6ACIASQBzAFIAZQBhAGQATwBuAGwAeQA6AFkAOwBTAGUAbABlAGMAdABlAGQAVgBhAGwAdQBlADoAUwBQAEgAQgBLADEAOwBJAHMAQwBoAGsAVgBhAGwAaQBkADoAWQA7AFYAYQBsAGkAZABLAGUAeQBMAGkAcwB0ADoAOwAiAH0A</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="849e2693-3793-47d9-8cd2-17f6b660687d" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAQwBvAG0AcABJAEQAOgBTAFAASABCAEsAMQA7ACIALAAiAGMAYQB0AGUAZwBvAHIAeQAiADoAIgBEAGUAcAB0AEkARAAiACwAIgBjAG8AbgB0AGUAeAB0AEsAZQB5ACIAOgAiAEkAcwBSAGUAYQBkAE8AbgBsAHkAOgBOADsAUwBlAGwAZQBjAHQAZQBkAFYAYQBsAHUAZQA6ADAAMAAwAEcAMAAwADsASQBzAEMAaABrAFYAYQBsAGkAZAA6AFkAOwBWAGEAbABpAGQASwBlAHkATABpAHMAdAA6ADsAIgB9AA==</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="875ec8bd-ddfa-4bdd-9a82-2b2467c7e6bb" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAQwBvAG0AcABJAEQAOgBTAFAASABCAEsAMQA7AEQAZQBwAHQASQBEADoAMAAwADAARwAwADAAOwAiACwAIgBjAGEAdABlAGcAbwByAHkAIgA6ACIATwByAGcAYQBuAEkARAAiACwAIgBjAG8AbgB0AGUAeAB0AEsAZQB5ACIAOgAiAEkAcwBSAGUAYQBkAE8AbgBsAHkAOgBOADsAUwBlAGwAZQBjAHQAZQBkAFYAYQBsAHUAZQA6ADAAMAAwAEcAOQAwADsASQBzAEMAaABrAFYAYQBsAGkAZAA6AFkAOwBWAGEAbABpAGQASwBlAHkATABpAHMAdAA6ADsAIgB9AA==</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="d9b8b51e-e0b0-4379-8198-db61107a1919" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAQwBvAG0AcABJAEQAOgBTAFAASABCAEsAMQA7AEQAZQBwAHQASQBEADoAMAAwADAARwAwADAAOwBPAHIAZwBhAG4ASQBEADoAMAAwADAARwA5ADAAOwAiACwAIgBjAGEAdABlAGcAbwByAHkAIgA6ACIAVQBzAGUAcgBJAEQAIgAsACIAYwBvAG4AdABlAHgAdABLAGUAeQAiADoAIgBJAHMAUgBlAGEAZABPAG4AbAB5ADoATgA7AFMAZQBsAGUAYwB0AGUAZABWAGEAbAB1AGUAOgA6ADoAOgA6ADoAOgA7AEkAcwBDAGgAawBWAGEAbABpAGQAOgBZADsAVgBhAGwAaQBkAEsAZQB5AEwAaQBzAHQAOgA7ACIAfQA=</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="c1a00ec3-bfdd-4aad-8b7a-b754e0e36f0d" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAIgAsACIAYwBhAHQAZQBnAG8AcgB5ACIAOgAiAEMAYQB0AGUAZwBvAHIAeQAwADEAIgAsACIAYwBvAG4AdABlAHgAdABLAGUAeQAiADoAIgBJAHMAUgBlAGEAZABPAG4AbAB5ADoATgA7AFMAZQBsAGUAYwB0AGUAZABWAGEAbAB1AGUAOgA6ADoAOgA6ADoAOgA7AEkAcwBDAGgAawBWAGEAbABpAGQAOgBZADsAVgBhAGwAaQBkAEsAZQB5AEwAaQBzAHQAOgA7ACIAfQA=</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="80c91222-274f-489d-8330-e9e7000e2adf" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAIgAsACIAYwBhAHQAZQBnAG8AcgB5ACIAOgAiAEMAbwBtAHAASQBEACIALAAiAGMAbwBuAHQAZQB4AHQASwBlAHkAIgA6ACIASQBzAFIAZQBhAGQATwBuAGwAeQA6AFkAOwBTAGUAbABlAGMAdABlAGQAVgBhAGwAdQBlADoAUwBQAEgAQgBLADEAOwBJAHMAQwBoAGsAVgBhAGwAaQBkADoAWQA7AFYAYQBsAGkAZABLAGUAeQBMAGkAcwB0ADoAOwAiAH0A</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="9c3608c1-67d4-43f3-a66f-86307e9f0741" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAQwBvAG0AcABJAEQAOgBTAFAASABCAEsAMQA7ACIALAAiAGMAYQB0AGUAZwBvAHIAeQAiADoAIgBEAGUAcAB0AEkARAAiACwAIgBjAG8AbgB0AGUAeAB0AEsAZQB5ACIAOgAiAEkAcwBSAGUAYQBkAE8AbgBsAHkAOgBOADsAUwBlAGwAZQBjAHQAZQBkAFYAYQBsAHUAZQA6ADAAMAAwAEcAMAAwADsASQBzAEMAaABrAFYAYQBsAGkAZAA6AFkAOwBWAGEAbABpAGQASwBlAHkATABpAHMAdAA6ADsAIgB9AA==</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="1dfb6d60-dc13-4b7c-8ac9-410ab37547e1" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAQwBvAG0AcABJAEQAOgBTAFAASABCAEsAMQA7AEQAZQBwAHQASQBEADoAMAAwADAARwAwADAAOwAiACwAIgBjAGEAdABlAGcAbwByAHkAIgA6ACIATwByAGcAYQBuAEkARAAiACwAIgBjAG8AbgB0AGUAeAB0AEsAZQB5ACIAOgAiAEkAcwBSAGUAYQBkAE8AbgBsAHkAOgBOADsAUwBlAGwAZQBjAHQAZQBkAFYAYQBsAHUAZQA6ADAAMAAwAEcAOQAwADsASQBzAEMAaABrAFYAYQBsAGkAZAA6AFkAOwBWAGEAbABpAGQASwBlAHkATABpAHMAdAA6ADsAIgB9AA==</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="76ec857a-32e6-478d-968e-67860f0f21b0" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAQwBvAG0AcABJAEQAOgBTAFAASABCAEsAMQA7AEQAZQBwAHQASQBEADoAMAAwADAARwAwADAAOwBPAHIAZwBhAG4ASQBEADoAMAAwADAARwA5ADAAOwAiACwAIgBjAGEAdABlAGcAbwByAHkAIgA6ACIAVQBzAGUAcgBJAEQAIgAsACIAYwBvAG4AdABlAHgAdABLAGUAeQAiADoAIgBJAHMAUgBlAGEAZABPAG4AbAB5ADoATgA7AFMAZQBsAGUAYwB0AGUAZABWAGEAbAB1AGUAOgA6ADoAOgA6ADoAOgA7AEkAcwBDAGgAawBWAGEAbABpAGQAOgBZADsAVgBhAGwAaQBkAEsAZQB5AEwAaQBzAHQAOgA7ACIAfQA=</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="03fcff39-7076-4692-af2b-675fb81f239f" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="30" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAIgAsACIAYwBhAHQAZQBnAG8AcgB5ACIAOgAiAEMAYQB0AGUAZwBvAHIAeQAwADEAIgAsACIAYwBvAG4AdABlAHgAdABLAGUAeQAiADoAIgBJAHMAUgBlAGEAZABPAG4AbAB5ADoATgA7AFMAZQBsAGUAYwB0AGUAZABWAGEAbAB1AGUAOgA6ADoAOgA6ADoAOgA7AEkAcwBDAGgAawBWAGEAbABpAGQAOgBZADsAVgBhAGwAaQBkAEsAZQB5AEwAaQBzAHQAOgA7ACIAfQA=</StringHttpBody>
    </Request>
    <Request Method="POST" Guid="e4c22dcd-a8d9-4f3a-9c55-980314c4b0ae" Version="1.1" Url="http://10.11.36.114:8007/OverTime/OvertimePreOrder_Add.aspx" ThinkTime="2" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="擷取隱藏欄位" Description="擷取回應中的所有隱藏欄位，並將它們放在測試內容中。">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam33.btnTempSaveInvisible" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="btnTempSaveInvisible" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam34.OTEmpID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="rbtSingleEmpID" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam35.txtOTEmpID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtOTEmpID" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam36.txtOTEmpName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtOTEmpName" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam37.ucDateStart$txtDate" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ucDateStart_txtDate" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam38.ucDateEnd$txtDate" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ucDateEnd_txtDate" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam39.OTTimeStart$ddlHH" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;00&lt;" />
            <RuleParameter Name="Index" Value="30" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam40.OTTimeStart$ddlMM" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;00&lt;" />
            <RuleParameter Name="Index" Value="30" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam41.OTTimeEnd$ddlHH" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;01&lt;" />
            <RuleParameter Name="Index" Value="31" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam42.OTTimeEnd$ddlMM" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;00&lt;" />
            <RuleParameter Name="Index" Value="30" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam43.ddlOTTypeID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;10&lt;" />
            <RuleParameter Name="Index" Value="40" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam44.ddlOrg" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&quot;0&quot;,&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;2&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam45.ucCascadingDropDown1$ddl02" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; tit" />
            <RuleParameter Name="Index" Value="220" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam46.ucCascadingDropDown1$ddl03" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; tit" />
            <RuleParameter Name="Index" Value="221" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <FormPostHttpBody>
        <FormPostParameter Name="ToolkitScriptManager1_HiddenField" Value=";;AjaxControlToolkit, Version=4.1.7.607, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:zh-Hant:7b95ed1a-6a3f-41dd-bc5b-63f39edbc4b4:de1feab2:fcf0e993:f2c8e708:720a52bf:f9cec9bc:589eaa30:698129cf:fb9b4c57:ccb96cf9:8ad18101:ca57ef3c:a67c2700:8613aea7:3202a5a2:ab09e3fe:87104b7c:be6fb298" RecordedValue=";;AjaxControlToolkit, Version=4.1.7.607, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:zh-Hant:7b95ed1a-6a3f-41dd-bc5b-63f39edbc4b4:de1feab2:fcf0e993:f2c8e708:720a52bf:f9cec9bc:589eaa30:698129cf:fb9b4c57:ccb96cf9:8ad18101:ca57ef3c:a67c2700:8613aea7:3202a5a2:ab09e3fe:87104b7c:be6fb298" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VSTATE" Value="{{$HIDDEN1.__VSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="{{$HIDDEN1.__SCROLLPOSITIONX}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="{{$HIDDEN1.__SCROLLPOSITIONY}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEENCRYPTED" Value="{{$HIDDEN1.__VIEWSTATEENCRYPTED}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{$HIDDEN1.__EVENTVALIDATION}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="btnTempSave" Value="暫存" RecordedValue="暫存" CorrelationBinding="{{FormPostParam47.btnTempSave}}" UrlEncode="True" />
        <FormPostParameter Name="OTEmpID" Value="rbtSingleEmpID" RecordedValue="rbtSingleEmpID" CorrelationBinding="{{FormPostParam48.OTEmpID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpID" Value="102119" RecordedValue="102119" CorrelationBinding="{{FormPostParam49.txtOTEmpID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpName" Value="廖O義" RecordedValue="廖O義" CorrelationBinding="{{FormPostParam50.txtOTEmpName}}" UrlEncode="True" />
        <FormPostParameter Name="ucDateStart$txtDate" Value="2017/05/16" RecordedValue="2017/05/16" CorrelationBinding="{{FormPostParam51.ucDateStart$txtDate}}" UrlEncode="True" />
        <FormPostParameter Name="ucDateEnd$txtDate" Value="2017/05/16" RecordedValue="2017/05/16" CorrelationBinding="{{FormPostParam52.ucDateEnd$txtDate}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeStart$ddlHH" Value="00" RecordedValue="00" CorrelationBinding="{{FormPostParam53.OTTimeStart$ddlHH}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeStart$ddlMM" Value="00" RecordedValue="00" CorrelationBinding="{{FormPostParam54.OTTimeStart$ddlMM}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeEnd$ddlHH" Value="01" RecordedValue="01" CorrelationBinding="{{FormPostParam55.OTTimeEnd$ddlHH}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeEnd$ddlMM" Value="00" RecordedValue="00" CorrelationBinding="{{FormPostParam56.OTTimeEnd$ddlMM}}" UrlEncode="True" />
        <FormPostParameter Name="ddlOTTypeID" Value="10" RecordedValue="10" CorrelationBinding="{{FormPostParam57.ddlOTTypeID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTReasonMemo$txtData" Value="test" RecordedValue="test" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ddlOrg" Value="1" RecordedValue="1" CorrelationBinding="{{FormPostParam58.ddlOrg}}" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$ddl02" Value="000G00" RecordedValue="000G00" CorrelationBinding="{{FormPostParam59.ucCascadingDropDown1$ddl02}}" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$ddl03" Value="000G90" RecordedValue="000G90" CorrelationBinding="{{FormPostParam60.ucCascadingDropDown1$ddl03}}" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$ddl04" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown1_ClientState" Value="SPHBK1:::永豐銀行:::" RecordedValue="SPHBK1:::永豐銀行:::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown2_ClientState" Value="000G00:::人力資源處:::" RecordedValue="000G00:::人力資源處:::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown3_ClientState" Value="000G90:::人資數據應用科:::" RecordedValue="000G90:::人資數據應用科:::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown4_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown1$CascadingDropDown4_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown5_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown1$CascadingDropDown5_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown1_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown1_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown2_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown2_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown3_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown3_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown4_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown4_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown5_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown5_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="frameAttach" Value="/Util/AttachAdmin.aspx?AttachDB=AattendantDB_ITRD&amp;AttachID=test102119d792ddc8-1f0c-4be6-ba06-1bd5280cb29a&amp;AttachFileMaxQty=1&amp;AttachFileMaxKB=3072&amp;AttachFileTotKB=3072&amp;AttachFileExtList=" RecordedValue="/Util/AttachAdmin.aspx?AttachDB=AattendantDB_ITRD&amp;AttachID=test102119d792ddc8-1f0c-4be6-ba06-1bd5280cb29a&amp;AttachFileMaxQty=1&amp;AttachFileMaxKB=3072&amp;AttachFileTotKB=3072&amp;AttachFileExtList=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientWidth" Value="{{$HIDDEN1.ucModalPopup1$ClientWidth}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientHeight" Value="{{$HIDDEN1.ucModalPopup1$ClientHeight}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="hiddenInputToUpdateATBuffer_CommonToolkitScripts" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam61.hiddenInputToUpdateATBuffer_CommonToolkitScripts}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="9b8bf352-810a-48f1-8041-7fbc9c87799d" Version="1.1" Url="http://10.11.36.114:8007/OverTime/OvertimePreOrder_Add.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <DependentRequests>
        <Request Method="POST" Guid="8619302f-17e0-4838-b08e-6c5f739ba633" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAIgAsACIAYwBhAHQAZQBnAG8AcgB5ACIAOgAiAEMAbwBtAHAASQBEACIALAAiAGMAbwBuAHQAZQB4AHQASwBlAHkAIgA6ACIASQBzAFIAZQBhAGQATwBuAGwAeQA6AFkAOwBTAGUAbABlAGMAdABlAGQAVgBhAGwAdQBlADoAUwBQAEgAQgBLADEAOwBJAHMAQwBoAGsAVgBhAGwAaQBkADoAWQA7AFYAYQBsAGkAZABLAGUAeQBMAGkAcwB0ADoAOwAiAH0A</StringHttpBody>
        </Request>
        <Request Method="POST" Guid="03b94de1-1df6-401e-b2b6-7523926a68b0" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAQwBvAG0AcABJAEQAOgBTAFAASABCAEsAMQA7ACIALAAiAGMAYQB0AGUAZwBvAHIAeQAiADoAIgBEAGUAcAB0AEkARAAiACwAIgBjAG8AbgB0AGUAeAB0AEsAZQB5ACIAOgAiAEkAcwBSAGUAYQBkAE8AbgBsAHkAOgBOADsAUwBlAGwAZQBjAHQAZQBkAFYAYQBsAHUAZQA6ADAAMAAwAEcAMAAwADsASQBzAEMAaABrAFYAYQBsAGkAZAA6AFkAOwBWAGEAbABpAGQASwBlAHkATABpAHMAdAA6ADsAIgB9AA==</StringHttpBody>
        </Request>
        <Request Method="POST" Guid="7ff5e677-0aa6-4819-a379-4da73394ddd6" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAQwBvAG0AcABJAEQAOgBTAFAASABCAEsAMQA7AEQAZQBwAHQASQBEADoAMAAwADAARwAwADAAOwAiACwAIgBjAGEAdABlAGcAbwByAHkAIgA6ACIATwByAGcAYQBuAEkARAAiACwAIgBjAG8AbgB0AGUAeAB0AEsAZQB5ACIAOgAiAEkAcwBSAGUAYQBkAE8AbgBsAHkAOgBOADsAUwBlAGwAZQBjAHQAZQBkAFYAYQBsAHUAZQA6ADAAMAAwAEcAOQAwADsASQBzAEMAaABrAFYAYQBsAGkAZAA6AFkAOwBWAGEAbABpAGQASwBlAHkATABpAHMAdAA6ADsAIgB9AA==</StringHttpBody>
        </Request>
        <Request Method="POST" Guid="e983e056-29cf-4cfa-93d2-c2394c28c129" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAQwBvAG0AcABJAEQAOgBTAFAASABCAEsAMQA7AEQAZQBwAHQASQBEADoAMAAwADAARwAwADAAOwBPAHIAZwBhAG4ASQBEADoAMAAwADAARwA5ADAAOwAiACwAIgBjAGEAdABlAGcAbwByAHkAIgA6ACIAVQBzAGUAcgBJAEQAIgAsACIAYwBvAG4AdABlAHgAdABLAGUAeQAiADoAIgBJAHMAUgBlAGEAZABPAG4AbAB5ADoATgA7AFMAZQBsAGUAYwB0AGUAZABWAGEAbAB1AGUAOgA6ADoAOgA6ADoAOgA7AEkAcwBDAGgAawBWAGEAbABpAGQAOgBZADsAVgBhAGwAaQBkAEsAZQB5AEwAaQBzAHQAOgA7ACIAfQA=</StringHttpBody>
        </Request>
        <Request Method="POST" Guid="9bd9f013-1803-403d-99eb-3179620bfd3a" Version="1.1" Url="http://10.11.36.114:8007/Util/WcfCascadingHelper.svc/Util_GetUser" ThinkTime="17" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <StringHttpBody ContentType="application/json; charset=utf-8" InsertByteOrderMark="False">ewAiAGsAbgBvAHcAbgBDAGEAdABlAGcAbwByAHkAVgBhAGwAdQBlAHMAIgA6ACIAIgAsACIAYwBhAHQAZQBnAG8AcgB5ACIAOgAiAEMAYQB0AGUAZwBvAHIAeQAwADEAIgAsACIAYwBvAG4AdABlAHgAdABLAGUAeQAiADoAIgBJAHMAUgBlAGEAZABPAG4AbAB5ADoATgA7AFMAZQBsAGUAYwB0AGUAZABWAGEAbAB1AGUAOgA6ADoAOgA6ADoAOgA7AEkAcwBDAGgAawBWAGEAbABpAGQAOgBZADsAVgBhAGwAaQBkAEsAZQB5AEwAaQBzAHQAOgA7ACIAfQA=</StringHttpBody>
        </Request>
      </DependentRequests>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="擷取隱藏欄位" Description="擷取回應中的所有隱藏欄位，並將它們放在測試內容中。">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam17.btnExit" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="btnExit" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam18.OTEmpID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="rbtSingleEmpID" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam19.txtOTEmpID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtOTEmpID" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam20.txtOTEmpName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtOTEmpName" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam21.ucDateStart$txtDate" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ucDateStart_txtDate" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam22.ucDateEnd$txtDate" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ucDateEnd_txtDate" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam23.txtMealTime" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtMealTime" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam24.OTTimeStart$ddlHH" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;請選擇" />
            <RuleParameter Name="Index" Value="29" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam25.OTTimeStart$ddlMM" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;請選擇" />
            <RuleParameter Name="Index" Value="29" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam26.OTTimeEnd$ddlHH" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;請選擇" />
            <RuleParameter Name="Index" Value="29" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam27.OTTimeEnd$ddlMM" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;請選擇" />
            <RuleParameter Name="Index" Value="29" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam28.ddlOTTypeID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="s&quot;:[&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;1&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam29.ddlOrg" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&quot;0&quot;,&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;2&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam30.ucCascadingDropDown1$ddl02" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;000" />
            <RuleParameter Name="Index" Value="220" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam31.ucCascadingDropDown1$ddl03" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;000" />
            <RuleParameter Name="Index" Value="221" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam32.hiddenInputToUpdateATBuffer_CommonToolkitScripts" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="s&quot;:[&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;1&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <FormPostHttpBody>
        <FormPostParameter Name="ToolkitScriptManager1_HiddenField" Value="{{$HIDDEN1.ToolkitScriptManager1_HiddenField}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VSTATE" Value="{{$HIDDEN1.__VSTATE}}" RecordedValue="AR+LCAAAAAAABADtGmtzG9XVurbkZ2ITiCENrDZOB8eTSNpdvSzZFvUr2E0ch0hJmAmMZqW9Xi1e7YrdlW0NwzQU0oSElDAQ2hBaypQUCpM0LVMwSUr7Ezqdfujn1vLjU38CPXd39bBsQ6AR03a6SbT3nnvuufe87jnnbr5wdD6EnFQyOaoqhqbK+jH8bF7S8FFVN0b49OwhXEgmu13O7VrKiEuKKOPxbG5yzLkN+lN52ZA27bZKWfEwn1fSGWc7NJ/IY92QVMXZns7MTmFePijzotMlzk3xktI5uL+hA7l2NrdMJ0ZVMh0aB1Ute2S6eTph0nNNJ8Z4A8MrIWVxO7xUg5dJGzASCwpMQV/A0yl0Ots8oTAT4thQINTZ3UM1Z7Gu8yLGVFMyjhecDpbqTR4FwKROFjfgXzwNfMvAsET2OK2UWBep7uQkyGNGw3omDmRg9KDGZ3HGHBiWsWbYYLIVNW9kKBdvGDxw7TWAY5bhWDYihCOcIKT7PewMk/YEUjjkSfFMyMOmhCDXz6RTXISndtp7AklphbihgaQPq2KGaoeFyMhhNT2bobbbWEQ69vBJVZuNSwYGoTcGGYZqSYLEiLCcu9hIhPP1+1iGXlo8X7x4jma5KMPAX6o5KRhHeY3nFh9ucDQ0NBDZkTd5OhD8HIkXdANnvUCIP0CfwBphcijgZcifA/QoaDqv4SEF5w2Nlw/QR/MpWUqDrSTUWawMpcJhPpgOhtiIP4CZ/oiTEN9ZRdP8SfApGTfCyK5yz3sMZ1UDmLeXbH0yK8fTGZzl26E1Js3MPA4KaHQ4ttvEbDyy51ZCytUEP5/tGHxsISvTc/a+e1gv00NjJa0KQHqoJ2/MeNhQz2OxbW2DC3pUNxegYYaiD/X0WI3oArQzhpGL+nzz8/Peeb9X1UQfxzCs78mpw9amSrhZXQAOgLCm2NR0T1YCs9LVGcOTVrNRwPNYWD2wKk2TdbGMs1gxaAVMaqjH5J+1Rq1xmJeT8UKikMM21ILr4KHATAW4GblhYY5P4xEsSkoPbQCJoR4y1bSsHtraStTgNREbR2CCngNswnxWUqbT6bwG3IPMfF+5BuxjXBHqtsQYTstgqMQx68vLGF84LGUlY0LNa0e+lVUm6r4KOWXrtsgUxItMmZlvYZm6cjOdmMrrxmgGp2fruIbJB2in3kvUV/HYCr3185LSCvXzEIiRx3hldnKsbiuc4GVJqPMaw8IzYLR1XiTOwwFcmNaGyVp1ZmVSmSNiI+nLPVlp0LcxXJqw2tBqAu0dbRGfDTOt4uPYKO9kUrchMKrlcRlOEstySlOO7KXR4zoezWsaUIakjicI5uS7CPzpjCqlcQ23WX6h1MsrKTWvCFioyOBuuLWkZKYtMZcT8qe/NA8KkGqJWtR68dlvkufYcywSXzWntJBnzk6BBivyLrFiyZG2tyYJJclWRKup89OagDVTMDZehtdHM7wiYhCQpOiQs4N8KmKtypNikcigr7q/DslKdGIcY+HY3TJKbaJiEtsArKBXpxuxAKCuA2yKNxFjufWIExsRydEfYypoZr+MtT5oxwKhQV8NaBPUEskaSBmzKnYStOpuFU4p9sXCBKXcq8UwSbNllJrtl0JPzE/2U+5tQJiIhaoQqsRUPvhjLOin0isjVJ3bMRbEU92vsofKwWsSWgcoo607OglT6wE15KoOP7AyNuxjOZ+fKdGuHi25tmX+tkuv85dBX40Dx5pIdVRTNZFayZWc4p9RNXhJCnmN5CVZaE0ew3MSQSEVYQs8yK4Ov7CfdmqPXYsO5w11OJeTC+PZFBYIbFTXR2Ve10Wqy65eT8KutSyvQQnbnNRMKTkRE6Y6S5U4JoelCDNak8NmAQ0IX7OE7kaosVPoHoTfzm4EBfVhScwYI+rCiIb52XGFyErICN1oBrCakMPEaj4BXMJARhCQ04Q0JfCC4Xxo9crllUs/Wlq8/s87r6x+dGHlg4vFz8/8/fSvAG83wXPf73TFj06MHGIB8ogN6Vi+ubj620tr50+vvvsKwPeUMBmGeZxhALLXhnQu3bpVPH919eOzy7cuwVow1FuNHCHIfTZkJyATzMuLy6+/tXz25ZU3Plh5/zVA8Jem2FIS0IAN6bIg/zh9unj7zemVz38NY491dpksl0XR2e1Ajm5HlyCIpCWgx2F2G9WeJEZGrhh4w9lRgOcp39TUUz5BoNqScYi+hnkX0/An6ZWrf/1zC7lxUAQbNNLkvv63FvPW4hjmhWlFLmQAIaGq4Ig5p+fU2u2fL79+/mm6+Nqd4qsfLf/k2vLVH4GIT61dvWLClxfPrF15r3jm/eKNzyw1gcbgt4u8qWZVSctSetaZOG5IcnI0Mwv6TaiiKGNTkZIsGYV9vfk02Y651WQ6M1sZ6j1ArxsUpDniM8NgIb19AwIICREROXWjIGOnew6ChQQh2gOeJypRQ80NzJVpRQdsK2oBebeZDssEfWyI6iAeUblD6hrl8zrWzXPEjAQi1fzN5AE7a1MVISVbMthuZCTdC6dCHg/19g4IYPjdLsq1qeJaN+htghjCOrVNCOgQMQD3zvWT3d1lXbsfLOvY/VDGvevfVaj7O86jd6FJ2OhWeiRDm2vRvfsbKtD9sOh+RHRTX1s7bvfmOnHTNQLdU1aCu6dK+tOwlyaqA3wnHi85KYh5M6l9uf1b16Rb2H/14EbJNd6l5FzmZoA3IixyD7mHEBoh6acodO3c1QqH5toLcGCdRQyDGBYxHGL8iAkgJoiYEBz+iOlHTASxDGJZxHKI9SM2gNggYkOIDSO2H7ERxDGIYxHHIc5fD5oP7G/cJW71WGeis4pN93cJb0P3fh+ICyAuiLgQ4sKI60dcBPkZ5GeRn0N+P/IHkD+I/CHkDyN/P/JHUIBBARYFOBTwo0AABYIoEEKBMAr0o0AEBRkUZFGQQ0E/CgZQMIiCIRQMo2A/Ckb+2/cPOhvaUmd381h6be2EuNfdIKDjxOvce7fytC8/nyxn2vR8qgzdKy+zzO9/xLXQ/13rP27/99q1TtnZaCPrJfls0upiaPJ2LmpWiSQXJV4hmp54v9PBuB8gCfmsib9DhGbWaoFnIrvVQtJ4yOWtFarCN2A7qofsxVE1zOExnbAW8qxpkNR24q0nSAw/KGFZcDaNqgKmtpk3OlAcWMBWAhwlt1CW6XbsgGTbQ3vKBgDtjrUzF4uXzhVvnlt+95yreOaTpdtvupbffnH1+k1X8fSdlVevdxc/vglphW/57XPFW5ehtfL7S8XFjzvgX/HCFasI2bF69kOoJ5bfubb8i8WlP7y9fO36juI7nwJo6fMLZODadcDdYSGvfPjCypU7S7cuLN3+pAMGV89dXP3lz5b+eMNpVlM7OxyMA+yOcXAOvyPgCDpCjrCj3xEhn1YZhgUL6KhWKAglDxJ6mNoNZeLCYayIRuYIkYGazkORJ2HFmBzDkOFPQg/zWsZsmqPkayURVzwjzRiHJEVo7/tBHGrMo3zaexKnxhdyGtZ176iazaqKl5yy+9ehH6C3xK58kQx7/V4/62W/+pOkkpflBurh5Jik58YVKEexcFLVBH069UyFj7akWalOQaWKoRQlRYwIS2fMZBebqdlw2pDm8OTUOKlVS5UumTlZ+nKeoXYkrbI4oR7P5bA2yuu49CVX1+dh1U0jzVNfGmmMBWM6ATWVripTOKtujDe1CFtGndCMrPJGVMYzxoAA0pD5QlRSZEnBnpSspmcHcrxAvpNGmfXBqMVKlqmWSmXnPCkJRma3dTVQ+B75yku1VITSlNwTH0E/RFblNosL+Zzzp8hMkQ3JkM0UWZqh91WSZq9smhgdG6I5hqEffZSujNF7huje3r7n6Da6GjpU1fHq+ZR1W7yPOUAo9A3Qbc8PtM3xGq0mFgxAFsA2yb2nV8TGuHUFOlKYFDYKWOZTRH5PgHT7zF2aBGAPxJL6niM9r6QoWCNWC4Stj/beGbP82vf9eHJKF01rm1RyeQO8xzS3A/QGZu2NPi+YNxdN7uA6ebrD6DQybycsa7GOqwdPFd97v/ibj9Z+/GbxxltPFz/9XfHyOytvfGAq+A1HSYM0l1ugWQZ+So0BOq3KqhbdyzDMAJ0iFapGkvYovffgwfH+4dAAPaMqhmcek9uTKJ1SZQHwVHKrGqVZoKKrUMjSAriIqPGFAXo+IxnYY17FR2lFndf4XGmCR+MFKa9HaT8sLKDmynn+vM3HfftWrt4ovnxx5aV31668BGdWHwy+WOLSEYTe2VKvkTEP8gs1/Vdr+q87yH8ouQ85urobyJ+OB/Y3QCy6XHY3iE1mmLpiQZo6Tf/b7dxWcgZFVfCA8C+8oE3CGSMAAA==" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="{{$HIDDEN1.__SCROLLPOSITIONX}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="{{$HIDDEN1.__SCROLLPOSITIONY}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEENCRYPTED" Value="{{$HIDDEN1.__VIEWSTATEENCRYPTED}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{$HIDDEN1.__EVENTVALIDATION}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="btnTempSaveInvisible" Value="暫存" RecordedValue="暫存" CorrelationBinding="{{FormPostParam33.btnTempSaveInvisible}}" UrlEncode="True" />
        <FormPostParameter Name="OTEmpID" Value="rbtSingleEmpID" RecordedValue="rbtSingleEmpID" CorrelationBinding="{{FormPostParam34.OTEmpID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpID" Value="102119" RecordedValue="102119" CorrelationBinding="{{FormPostParam35.txtOTEmpID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpName" Value="廖O義" RecordedValue="廖O義" CorrelationBinding="{{FormPostParam36.txtOTEmpName}}" UrlEncode="True" />
        <FormPostParameter Name="ucDateStart$txtDate" Value="2017/05/16" RecordedValue="2017/05/16" CorrelationBinding="{{FormPostParam37.ucDateStart$txtDate}}" UrlEncode="True" />
        <FormPostParameter Name="ucDateEnd$txtDate" Value="2017/05/16" RecordedValue="2017/05/16" CorrelationBinding="{{FormPostParam38.ucDateEnd$txtDate}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeStart$ddlHH" Value="00" RecordedValue="00" CorrelationBinding="{{FormPostParam39.OTTimeStart$ddlHH}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeStart$ddlMM" Value="00" RecordedValue="00" CorrelationBinding="{{FormPostParam40.OTTimeStart$ddlMM}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeEnd$ddlHH" Value="01" RecordedValue="01" CorrelationBinding="{{FormPostParam41.OTTimeEnd$ddlHH}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeEnd$ddlMM" Value="00" RecordedValue="00" CorrelationBinding="{{FormPostParam42.OTTimeEnd$ddlMM}}" UrlEncode="True" />
        <FormPostParameter Name="ddlOTTypeID" Value="10" RecordedValue="10" CorrelationBinding="{{FormPostParam43.ddlOTTypeID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTReasonMemo$txtData" Value="test" RecordedValue="test" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ddlOrg" Value="1" RecordedValue="1" CorrelationBinding="{{FormPostParam44.ddlOrg}}" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$ddl02" Value="000G00" RecordedValue="000G00" CorrelationBinding="{{FormPostParam45.ucCascadingDropDown1$ddl02}}" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$ddl03" Value="000G90" RecordedValue="000G90" CorrelationBinding="{{FormPostParam46.ucCascadingDropDown1$ddl03}}" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$ddl04" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown1_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown1$CascadingDropDown1_ClientState}}" RecordedValue="SPHBK1" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown2_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown1$CascadingDropDown2_ClientState}}" RecordedValue="000G00" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown3_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown1$CascadingDropDown3_ClientState}}" RecordedValue="000G90" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown4_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown1$CascadingDropDown4_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown5_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown1$CascadingDropDown5_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$ddl01" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$ddl02" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$ddl03" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown1_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown1_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown2_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown2_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown3_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown3_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown4_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown4_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown5_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown5_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="frameAttach" Value="/Util/AttachAdmin.aspx?AttachDB=AattendantDB_ITRD&amp;AttachID=test102119d792ddc8-1f0c-4be6-ba06-1bd5280cb29a&amp;AttachFileMaxQty=1&amp;AttachFileMaxKB=3072&amp;AttachFileTotKB=3072&amp;AttachFileExtList=" RecordedValue="/Util/AttachAdmin.aspx?AttachDB=AattendantDB_ITRD&amp;AttachID=test102119d792ddc8-1f0c-4be6-ba06-1bd5280cb29a&amp;AttachFileMaxQty=1&amp;AttachFileMaxKB=3072&amp;AttachFileTotKB=3072&amp;AttachFileExtList=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientWidth" Value="{{$HIDDEN1.ucModalPopup1$ClientWidth}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientHeight" Value="{{$HIDDEN1.ucModalPopup1$ClientHeight}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="d565748f-b0f2-49c1-bbcb-dcd1b1527cee" Version="1.1" Url="http://10.11.36.114:8007/OverTime/OvertimePreOrder_Add.aspx" ThinkTime="16" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="http://10.11.36.114:8007/OverTime/OvertimePreOrder.aspx" ReportingName="" IgnoreHttpStatusCode="False">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="擷取隱藏欄位" Description="擷取回應中的所有隱藏欄位，並將它們放在測試內容中。">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam13.btnQuery" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="btnQuery" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam14.txtOTEmpID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtOTEmpID" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam15.ddlQueryConditions" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="s&quot;:[&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;1&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam16.ddlOTStatus" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&quot;0&quot;,&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;2&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <FormPostHttpBody>
        <FormPostParameter Name="ToolkitScriptManager1_HiddenField" Value=";;AjaxControlToolkit, Version=4.1.7.607, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:zh-Hant:7b95ed1a-6a3f-41dd-bc5b-63f39edbc4b4:de1feab2:fcf0e993:f2c8e708:720a52bf:f9cec9bc:589eaa30:698129cf:fb9b4c57:ccb96cf9:8ad18101:ca57ef3c:a67c2700:8613aea7:3202a5a2:ab09e3fe:87104b7c:be6fb298" RecordedValue=";;AjaxControlToolkit, Version=4.1.7.607, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:zh-Hant:7b95ed1a-6a3f-41dd-bc5b-63f39edbc4b4:de1feab2:fcf0e993:f2c8e708:720a52bf:f9cec9bc:589eaa30:698129cf:fb9b4c57:ccb96cf9:8ad18101:ca57ef3c:a67c2700:8613aea7:3202a5a2:ab09e3fe:87104b7c:be6fb298" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VSTATE" Value="{{$HIDDEN1.__VSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="{{$HIDDEN1.__SCROLLPOSITIONX}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="{{$HIDDEN1.__SCROLLPOSITIONY}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEENCRYPTED" Value="{{$HIDDEN1.__VIEWSTATEENCRYPTED}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{$HIDDEN1.__EVENTVALIDATION}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="btnExit" Value="返回" RecordedValue="返回" CorrelationBinding="{{FormPostParam17.btnExit}}" UrlEncode="True" />
        <FormPostParameter Name="OTEmpID" Value="rbtSingleEmpID" RecordedValue="rbtSingleEmpID" CorrelationBinding="{{FormPostParam18.OTEmpID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpID" Value="102119" RecordedValue="102119" CorrelationBinding="{{FormPostParam19.txtOTEmpID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpName" Value="廖O義" RecordedValue="廖O義" CorrelationBinding="{{FormPostParam20.txtOTEmpName}}" UrlEncode="True" />
        <FormPostParameter Name="ucDateStart$txtDate" Value="2017/05/16" RecordedValue="2017/05/16" CorrelationBinding="{{FormPostParam21.ucDateStart$txtDate}}" UrlEncode="True" />
        <FormPostParameter Name="ucDateEnd$txtDate" Value="2017/05/16" RecordedValue="2017/05/16" CorrelationBinding="{{FormPostParam22.ucDateEnd$txtDate}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeStart$ddlHH" Value="請選擇" RecordedValue="請選擇" CorrelationBinding="{{FormPostParam24.OTTimeStart$ddlHH}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeStart$ddlMM" Value="請選擇" RecordedValue="請選擇" CorrelationBinding="{{FormPostParam25.OTTimeStart$ddlMM}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeEnd$ddlHH" Value="請選擇" RecordedValue="請選擇" CorrelationBinding="{{FormPostParam26.OTTimeEnd$ddlHH}}" UrlEncode="True" />
        <FormPostParameter Name="OTTimeEnd$ddlMM" Value="請選擇" RecordedValue="請選擇" CorrelationBinding="{{FormPostParam27.OTTimeEnd$ddlMM}}" UrlEncode="True" />
        <FormPostParameter Name="chkMealFlag" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="txtMealTime" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam23.txtMealTime}}" UrlEncode="True" />
        <FormPostParameter Name="ddlOTTypeID" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam28.ddlOTTypeID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTReasonMemo$txtData" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ddlOrg" Value="1" RecordedValue="1" CorrelationBinding="{{FormPostParam29.ddlOrg}}" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$ddl02" Value="000G00" RecordedValue="000G00" CorrelationBinding="{{FormPostParam30.ucCascadingDropDown1$ddl02}}" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$ddl03" Value="000G90" RecordedValue="000G90" CorrelationBinding="{{FormPostParam31.ucCascadingDropDown1$ddl03}}" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$ddl04" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown1_ClientState" Value="SPHBK1:::永豐銀行:::" RecordedValue="SPHBK1:::永豐銀行:::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown2_ClientState" Value="000G00:::人力資源處:::" RecordedValue="000G00:::人力資源處:::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown3_ClientState" Value="000G90:::人資數據應用科:::" RecordedValue="000G90:::人資數據應用科:::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown4_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown1$CascadingDropDown4_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown1$CascadingDropDown5_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown1$CascadingDropDown5_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown1_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown1_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown2_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown2_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown3_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown3_ClientState}}" RecordedValue="::::::" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown4_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown4_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucCascadingDropDown2$CascadingDropDown5_ClientState" Value="{{$HIDDEN1.ucCascadingDropDown2$CascadingDropDown5_ClientState}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="frameAttach" Value="/Util/AttachAdmin.aspx?AttachDB=AattendantDB_ITRD&amp;AttachID=test102119d792ddc8-1f0c-4be6-ba06-1bd5280cb29a&amp;AttachFileMaxQty=1&amp;AttachFileMaxKB=3072&amp;AttachFileTotKB=3072&amp;AttachFileExtList=" RecordedValue="/Util/AttachAdmin.aspx?AttachDB=AattendantDB_ITRD&amp;AttachID=test102119d792ddc8-1f0c-4be6-ba06-1bd5280cb29a&amp;AttachFileMaxQty=1&amp;AttachFileMaxKB=3072&amp;AttachFileTotKB=3072&amp;AttachFileExtList=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientWidth" Value="{{$HIDDEN1.ucModalPopup1$ClientWidth}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientHeight" Value="{{$HIDDEN1.ucModalPopup1$ClientHeight}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="hiddenInputToUpdateATBuffer_CommonToolkitScripts" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam32.hiddenInputToUpdateATBuffer_CommonToolkitScripts}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="44f8fdf4-bc94-42a2-88c8-4acbdcfdebd0" Version="1.1" Url="http://10.11.36.114:8007/OverTime/OvertimePreOrder.aspx" ThinkTime="35" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="擷取隱藏欄位" Description="擷取回應中的所有隱藏欄位，並將它們放在測試內容中。">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam9.btnDelete" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="btnDelete" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam10.txtOTEmpID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtOTEmpID" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam11.ddlQueryConditions" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="s&quot;:[&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;1&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam12.ddlOTStatus" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&quot;0&quot;,&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;2&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <FormPostHttpBody>
        <FormPostParameter Name="ToolkitScriptManager1_HiddenField" Value=";;AjaxControlToolkit, Version=4.1.7.607, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:zh-Hant:7b95ed1a-6a3f-41dd-bc5b-63f39edbc4b4:de1feab2:fcf0e993:f2c8e708:720a52bf:f9cec9bc:589eaa30:698129cf:fb9b4c57:ccb96cf9:a67c2700:8613aea7:3202a5a2:ab09e3fe:87104b7c:be6fb298" RecordedValue=";;AjaxControlToolkit, Version=4.1.7.607, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:zh-Hant:7b95ed1a-6a3f-41dd-bc5b-63f39edbc4b4:de1feab2:fcf0e993:f2c8e708:720a52bf:f9cec9bc:589eaa30:698129cf:fb9b4c57:ccb96cf9:a67c2700:8613aea7:3202a5a2:ab09e3fe:87104b7c:be6fb298" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VSTATE" Value="{{$HIDDEN1.__VSTATE}}" RecordedValue="AR+LCAAAAAAABACtV91zE1UUT5ZuGtKPFGxiRd1dHpxtp6Rkk6gDtQ8kKTYjJdgGHixMZpt7u1m73c1kb0vjEz4UFHGAoehgZ5xxRgFBHB1fKjKOf4IPPvjMkLR98k/Ae/cj2SZLBkq30+TmnHPP73zfvU+9wQEv7ZOWJkVZDb437OmmfKGAP5tLaQulTLozmxsn375sLi0iiL9y8gLszuamkYgW9ZPiAuzCNA2JCmFg8dyymkn7bQG8OK6VF05mA8cV7XxK1CFmUk/xEwRBOiAciccE4Z23E4lgOMz40rCEMmn6AB+NRt8XovwhYxF1LJj92bJEVJ2QdYSXIgajKZ5nevOnRAlmdIJ2QpOKTMgifLgIy5VpVJZVyaD7TMdo3/SpieQHAnPQkju2iLRjpZJSGV+YhYDQUrqeUkRdlxjekiExQvh/ulDWFOWUpstI1tSsilcoKRbmJSZgukAshEyXw1b6Xq8OFVhAXDozncucTOW4Ao4Gx50vQpXLJqIjp0uWP5ysc6qGOHVRUTjUyoYK3sfzHFQBJ+qEWecdknWya5BssEk8P2SJ2RQncLw9cLwdcNwFON4KHHcFjrUHjrUDjrkAx1qBY67AQntgoQV40Nhtbm67d9DKcENkrqwtcHBianI6ncxnclPpkRkwq50bmTEE5E9EUj+kRM4R/WXIWRvHnEBDhhmm+0P1GAiOGDjcIyY+27kW3+zoCduj1wB5BkS7CLbLXGviHAbbicOkNkIuJrvUgEs9uvcGeQhoWjuvNqMaTjsCarjf8NRYmR4+Xl19vHqB54Yb0sN8hK//JIOSBMHFelNOcAi6+GMKxdyE4k1CcTehRJNQwinkFgXD4Bco3yynwDnEfazJ6vPuSEQ5jVQTtmVKU2BKA3CMT0R5TsTF4rCYG8vWly8MErdA4k6QuA0S3x2QmAUSc4LEbJDY7oAIFojgBBFsEGF3QCwMJ0SUNwBc9VtDqzFx8BAkTZwtA1jmZivOU8dxDjgms2PE1LueYzrxyjg1/farABO0z2CIxJwo6VKYovYEQbgffwbDFD7vT8hSESW15WQZivPjqjirQFAEYWoOS3VQXkOq84ysy5hRBICiDUpHDi4jemDz1s2NaxefrD/479GVzftfbNz9svrnyuMLt7HcW0SO7aG7a7+sb/56bevyhc3vrmD6kEUPPnn4sHp5bfO3S7WH17AezIpYrBBmEfrN9dqNb2qXPt9Yvbtx5zoWOBy0DCNO9AEQ9s4BSrCJPkIMhv1ML37pEs+IyiI8LkMF0B0kJUwPoRKzTaKfEEm/Ml35g4SV1BZVIDGd9Rj0hah9Efxgx7Y+xaZcIj/C5itVpMn6EOXxmZz+4T2UJBmW0YY5bK9pABtsYLJ9ErtvFxA6d44gRCObX93bWvlp4/bV6mc/4gDbCIITIW5H129FF4MFGvWJIXu2Tb86rrcVN+T1YM3epuAEGiW+c22dDW2xl9e219bW5Tjfdq7uXaNiKaOhSNsFcMmRewF56xYR3V3Bz9nDk5NnDwPABPL4DlBGxr3B85d8Ze2fv/2MPz+uAouU7GAf/OvHKjL6FBRBVlUqRSyQ0zR8mSjRkZmtP76t3bh8jqtef1S9er/29Q+1tYu4P2e21m4Z9Nr6ytat76srd6o//272ODHPi30GpNc1taDIhXn6o9NIVvKp4jweDjlNkhRoTAFZkVFlkEfLyLzcJKEkq/lCcb7B5Q9xzXwgL5EeO4aHDD80CnAvU2SM0DqqKJBml2AZyQVRiYiKLKlHkVYaXaqrOzraGEQ78xLvDGgqmFVMz3pRUdZHlsiAGOP5UYCTEvYxPtd07G3JxgQZEduSMUHqD6eV3b99M/tKPYNsfz1zbKjIhl82Teyr9Jnnyw+2tU12CNc9N+zAc6eFfe2F88EecM8C+3pTCN+oh5190xHvI+TSvY/y9oU95K+7f9jjAdSoEaKOoBGhAboHyHpJEStHVU2Fo+B/O7Wn9LUPAAA=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="{{$HIDDEN1.__SCROLLPOSITIONX}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="{{$HIDDEN1.__SCROLLPOSITIONY}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEENCRYPTED" Value="{{$HIDDEN1.__VIEWSTATEENCRYPTED}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{$HIDDEN1.__EVENTVALIDATION}}" RecordedValue="0/teuahrapMTsF0+f8kSw+GN79FiIKZ4gIAPxGLqEVtNYII8kWc/wfg5dLL+BlaLsnJ8dsYoX65zXeYL4goDU5m1dIKVycJMIp67D91vCLNP91kt+6+RLjrQAWWdpm8EnA5zUmqelzYKJeUtDRDKUfCKS7MH8JOFmZseoL95hD+gFWTXXGhQEJ8xOL8UCzTQdzX8MfV8DJTz4XNVCbtVfUOAJMdLAfqZ9gzsCYfIp6YIkgogE/CCfV4TVC/eK0wxcGbx0346eU6943Ij9FP57Ec7ZpKw7BUo82hRM2MG4TBvzpUpjjgz4Atgd+6KCa+DlL4ekhNdO2EKcO64ZlcV3jWcpaWLLyeP74CeO0l21kd41cvpMHAT1pznCzgfakF159MSQ1sHtAq1pIrm5Tirzuxhjgn17vXe4c9e/pe7yM/SPsb2unTCXuBWmic7/GMpF7YX+YX/p1+PwIGQsG43tQZ1AtPxYAcTEsmDjRTaqjg+5qcxuWTiUQMOMchOf/AupqgHSOC07cFU8Jtcba9tjTwy1KZ2jrLVTduxIf7uAsgK6XXmgNVLnzf3Wnx6AuYKqi+J17PdynJxjmyFO4p3ea5T2Cj8gwg+8oHLlePcpH7Iy9q818321NZcBuI00fU8kUlkMbN84yy5xeagpRLUaiu+ukzYl1bYfCwWkGQIuaIsI/coels7RknRiKEciV35xYZwqwdNKlfwsEtdhkoy5qJ9Fb9F0m/jGpu87YvdOcXuJ4trsbEdLPS+VTRJ1Pl8zUynAtBnj7RmOEVlnHxXD5SGMqNWT9N8OxSe8WCwmXtkzcPOF7Oq7XAgVpS675TcQrV8IA9dAK8gb2ZPVQEK6YNML6IYyYT8MzaW3OcmnBgC0sPWqgahh6TftZdxiStP4BhtOPV5rRohvSI0MhqWhiQSyfC7b+Tv0n0X4VRAVLrD8aCinHszfS0b5kUDEfwpx4CuWhlIXLMK16W+paIQu6lX8H7PovYDvObCHIF2ZiAy5M7TNB+KKtKFp+tLloVXD3mSiB7qUayA486o4Hn3PtOXUoljbGm8BA6ubkcUYs704/DD+y5QzRkEuNT7wozMppiU0KcaunyDldYXMU3MJqIySYsZASGloJDYbY5wmJrpAonidPPzyq2m4UXOwRmzhRtsdN6gPxyeIZj7ikUiKXNFQsU=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ScreenWidth" Value="{{$HIDDEN1.ScreenWidth}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ScreenHeight" Value="{{$HIDDEN1.ScreenHeight}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="btnQuery" Value="查詢" RecordedValue="查詢" CorrelationBinding="{{FormPostParam13.btnQuery}}" UrlEncode="True" />
        <FormPostParameter Name="ddlOrgAndFlow" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ddlQueryConditions" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam15.ddlQueryConditions}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpID" Value="102119" RecordedValue="102119" CorrelationBinding="{{FormPostParam14.txtOTEmpID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpName" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="txtOTFormNO" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ddlOTStatus" Value="1" RecordedValue="1" CorrelationBinding="{{FormPostParam16.ddlOTStatus}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTDateBegin$txtDate" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="txtOTDateEnd$txtDate" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientWidth" Value="{{$HIDDEN1.ucModalPopup1$ClientWidth}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientHeight" Value="{{$HIDDEN1.ucModalPopup1$ClientHeight}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="2d048e27-fcb4-4ff5-8935-702181b32117" Version="1.1" Url="http://10.11.36.114:8007/OverTime/OvertimePreOrder.aspx" ThinkTime="14" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="擷取隱藏欄位" Description="擷取回應中的所有隱藏欄位，並將它們放在測試內容中。">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam5.btnDeleteInvisible" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="btnDeleteInvisible" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam6.txtOTEmpID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtOTEmpID" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam7.ddlQueryConditions" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="s&quot;:[&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;1&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam8.ddlOTStatus" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&quot;0&quot;,&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;2&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <FormPostHttpBody>
        <FormPostParameter Name="ToolkitScriptManager1_HiddenField" Value=";;AjaxControlToolkit, Version=4.1.7.607, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:zh-Hant:7b95ed1a-6a3f-41dd-bc5b-63f39edbc4b4:de1feab2:fcf0e993:f2c8e708:720a52bf:f9cec9bc:589eaa30:698129cf:fb9b4c57:ccb96cf9:a67c2700:8613aea7:3202a5a2:ab09e3fe:87104b7c:be6fb298" RecordedValue=";;AjaxControlToolkit, Version=4.1.7.607, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:zh-Hant:7b95ed1a-6a3f-41dd-bc5b-63f39edbc4b4:de1feab2:fcf0e993:f2c8e708:720a52bf:f9cec9bc:589eaa30:698129cf:fb9b4c57:ccb96cf9:a67c2700:8613aea7:3202a5a2:ab09e3fe:87104b7c:be6fb298" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VSTATE" Value="{{$HIDDEN1.__VSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="{{$HIDDEN1.__SCROLLPOSITIONX}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="{{$HIDDEN1.__SCROLLPOSITIONY}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEENCRYPTED" Value="{{$HIDDEN1.__VIEWSTATEENCRYPTED}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{$HIDDEN1.__EVENTVALIDATION}}" RecordedValue="jS65tE2LfDYwqsir9O+abfLITR/TG11XNUxgqacAcgLbi7gUPFPy1GWEcO+0UdRmuLfudDBfcHTO1e6T830wFx8m1DFhhPYQC0KxJ+VA+cqcrW2iYjIv3eSeqx9utBiMO0dPiXO9dQVAsIVzjQac8e/0vwzOmnnrbgMpHDZ7yA+4ZQdctiaLRyyZFjKhHnVSrzV+4qYRdvieQhnNoph2sxhetoSGkAoxamFmw0sOYHBaayEcZf5CmmG/WCk3QwsBHmEFHREUymvN9M9wLn6oHFtPSfytxppIumOoKQl9xptP+Vqb3MusY9BMvJe9+oZrC0kYEJc+FObAnKz5vLFSIKymX0p4vmB85Z9xiB83dlVt0VpAVBX7fZWEGAiSLb1tzGP/Tls7mS+aHWLns8pRMfyJQwqWY5t8OslJUY1lF0mn6oWMvs2T/bNTYRDUsl/jcwJIB10wQvkYKgvMLynereCjcfvsCv6+IYz03fgn8uHprRkrtT/VTI3OPKnXGa5OuoE3nx6Cy7OO3xqJolz6FEntQ01m1WnDYMko5wt9lYwcyoS7vYyNQy6CcBfdFZx+h9UBsIQZqwhQtfVT7dMNVOAAcWS+dC8TnkWt5FlHbzKTTxlfU5KGCtWPPR597wrqZEH86puDZ0++eGv+zX20xyj17hb2kqIJ2oz7HPVlZRrKIK/1uWOyzLvJugaA3jtbmq+CIWEJpr2blZLsbCjvJj4lIrI6UG5U5445sji0pQgzV3a451jrjay3mbLhf9hKSiJlselwCh7wUfYPok2Fq4K8n3njGAucZduZ/U+vz43yHCpZ5yZjGBWduHcrtyAwLBxzNn/9KD3UGSwYNlaApaLzuYu8prews0Co/ci9jAVa/OffESTWE+YYcs2oJ6F2qlBX4ejWTN88fg7r+o05joD1ufu1McUt/xtBX3XBAh9rCYSr66q1MsYGrQG1ps/6UpILtFELMgf+ZsVNeLHmXaTESo7nmJn95s/o+xt3+zJDUjDvY+qbHOdnwZCXGIgmumAKnaODnR2bOqxjcalXFpUFfJKod984OSQteOeQ51e0wZFg6LHfWHmicHIl3Qn3pBFKEJOPmgzAq8d76frEGefOCPZmFTkSm1EI+KZkp+7mJFeIfVrCdgIN5Z0P08eKYh0NN9Y03LpGQQ02diaOZybVC/VrOpwEBjgRZmrc8uxuDD7HLo2hYtI9uKs1/pmX4sNrR6S9ib2kYCddKYux38Atvb6rGufl1Zv30Y+fD4ztbjCIZPXUS5GGw4kVehthkC2haxaiHxM4tY0y7Pnf+st0cFKb9AZN5UU6b3c6hCmjV2Gn2H3EEE7jhl67A9BegR/jyfF5EfIYKEVWzqiDWoSlL1czWoxMWnO/HLVfGw7qna3XQb5sioU6MVyaxv0/qzTnQ6GVy6deeWf0Deicwqvy+7HOMZEADDoP/jP+fvZP4gyA4bXSE2S75LYy1BWdksEIbT20VLIxxPpJev3QPjVw2ESO2fjDKuWztcV7XTNcv4FTLJaNUSlp4sfPyUNs1FjmuOt0rqvxfyPWyrHlQLaNm0oQrILVG0dPQmDnSbFoQJqXklDf+yTT2Rgcd+kSLj1sq40I1y/Uf8y0zmouB/k7EL2kVMGE56mqULLLgzWDJODdciQLoaOsNkqItoBHHlI0bA==" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ScreenWidth" Value="{{$HIDDEN1.ScreenWidth}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ScreenHeight" Value="{{$HIDDEN1.ScreenHeight}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="btnDelete" Value="刪除" RecordedValue="刪除" CorrelationBinding="{{FormPostParam9.btnDelete}}" UrlEncode="True" />
        <FormPostParameter Name="ddlOrgAndFlow" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ddlQueryConditions" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam11.ddlQueryConditions}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpID" Value="102119" RecordedValue="102119" CorrelationBinding="{{FormPostParam10.txtOTEmpID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpName" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="txtOTFormNO" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ddlOTStatus" Value="1" RecordedValue="1" CorrelationBinding="{{FormPostParam12.ddlOTStatus}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTDateBegin$txtDate" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="txtOTDateEnd$txtDate" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="gvMain$ctl02$chkChoose" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientWidth" Value="{{$HIDDEN1.ucModalPopup1$ClientWidth}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientHeight" Value="{{$HIDDEN1.ucModalPopup1$ClientHeight}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="e852ff67-c67d-442a-b2cd-2e3c8f29a84e" Version="1.1" Url="http://10.11.36.114:8007/OverTime/OvertimePreOrder.aspx" ThinkTime="6" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="擷取隱藏欄位" Description="擷取回應中的所有隱藏欄位，並將它們放在測試內容中。">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam1.btnQuery" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="btnQuery" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam2.txtOTEmpID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="txtOTEmpID" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam3.ddlQueryConditions" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="s&quot;:[&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;1&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam4.ddlOTStatus" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&quot;4&quot;,&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;6&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <FormPostHttpBody>
        <FormPostParameter Name="ToolkitScriptManager1_HiddenField" Value="{{$HIDDEN1.ToolkitScriptManager1_HiddenField}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VSTATE" Value="{{$HIDDEN1.__VSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="{{$HIDDEN1.__SCROLLPOSITIONX}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="{{$HIDDEN1.__SCROLLPOSITIONY}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEENCRYPTED" Value="{{$HIDDEN1.__VIEWSTATEENCRYPTED}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{$HIDDEN1.__EVENTVALIDATION}}" RecordedValue="SEKPZGQdFa/P+OSYMf+NQLr8Ie2tNxkTVrHBVHqW1oBmm71K716szkKItQb0WD6SCQLcRmegTAHN8bLYKrMCxQKdX9qAu7ZO3iIA8qEDJtkESgYWqXnj7mxmxwTPKYPpqwitlkbPbrDcQt09O9BdlWQbGW5VcDs/FqVZsrT/0mhBZEsD6dHV8k5vTNp5sF9SaF9tJvjmSMrhi5EskXoy0fHA0VLWNa8+yyzsBEJzp19CtP9jGbOniSOVOfnI2AA+kdPywFHbRnB+cbxBlw+D4YUy68PbMKE8hKb9I70Ib1sRj1xqYfZ5fjirxllwjfse+RK+Hlj0OxNV2lAjuP+4ZfjqACQeV6i64dmYEpGVoyiTBMEnHLqPx9vW6GSjaiDffBIe/FBVg7RbXL6hCHX4hhv6o9QaMurXUO4MOsXbMXcN3qqGn9WqywMavBxzNh2ltNU9ZKLRFLWqmEuLiaUMjwfgn7kQUtOHlVaQ98tovrJqdkZbNw/swCxJvJN/8rgZEbPl6yQA4aTAGJi6QaeHn6IL8yc3ADoTc4tWexcZhhhmuQQ3wDM2QTsiAoTLuG/xPEaFxqVqDn37S3EOzKfT6wNUAG2RxFm1l6l5hpqEt+brjtNC1c2yvTR8fLT8b/B7QO2OyTsb5phUK8biLrovXvA2Xeg8Avyp5mXPArqls8JTVphy9U9oryOV6dyiMBor/vnmU0w9zWf4Ps28ye6L2n5L2b+0RJftoX/BsclaRuCX6fpSo4COfKGruhu7P2Fw8+qy7sBBepK+lQnKcMUX7ZH64wfvUgmciYFbguEzs2rkAwaypxm8b6abBXUgHUF/csJcZrgT/W7FWry4VOVhIq1kKV1Dwnn4jbmfDbrcosJlY3YZQBxveBxuDs5alzQoGegBcnUa8j13JT6kX6TOeKJ9ERVqbQtDOPhj1BJChIDEUI3FTEj+QiowN5bJhvZXI2ftyHBdAo+E8WrMUMgL024l2FteumTl5zamZhzTlZXq7ADBFNmr62g76NcVnZ/SbUuhH9riQC6GrsUC4tw76l8AjrzczMMLLI4oMtp1GiT2bl0lAx7zkh+eShIUvO2KFY3+AQyExF2Jx4F5FqmEIt3kLVQaS8zDsXGLn7BvotPGaBip/6z8ZjC3Fsn5PIxQSGG4kmDZz+1sgxB5+yuxm6QKQoxF9v56MlHzmyWhc3e1Grj3RDkWE82Ue1R2xsy3gbJRTv6mpah7xfs6b4pK4DOEQAxfHjsKmLYAsY0R1RCl+trBXTaINPiMNOnA2i4QPuNrJFNAz3+TdTNVDNsKuAajg2ns1m3u2uRjihlo5J+LJemdrSamH2YesPzOdx0Pa3uge8A4VaoWqlJOXr7mr+lhattJQ2Rs0alH9+qvgfrsCP5ww4u+hP5mC9kdb7HxO0Xux9uwdKbflanTNOOYth6IVbAso1HKNXOLeLCKG2ddLP4G9wt4MIyIWWxSZr8V1RAJyBm5mljgE1b4KnKY0T6N0Z22pgtshiOwW85ay4MGq/Po3vK4EN13RsPVBKJzpLBKchff7flNc85BZ6wBNUYgIPwHuV5/55Dm8vZGTZ9JR2FHv00zSqWrXdL6DmDQ/clcUmxZaiPhAhn9iePd/FZz/19MfOhw6ti5208hIpXICKhgd8i5vCBWs4XLJxH8BtqKNw==" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ScreenWidth" Value="{{$HIDDEN1.ScreenWidth}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ScreenHeight" Value="{{$HIDDEN1.ScreenHeight}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="btnDeleteInvisible" Value="刪除" RecordedValue="刪除" CorrelationBinding="{{FormPostParam5.btnDeleteInvisible}}" UrlEncode="True" />
        <FormPostParameter Name="ddlOrgAndFlow" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ddlQueryConditions" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam7.ddlQueryConditions}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpID" Value="102119" RecordedValue="102119" CorrelationBinding="{{FormPostParam6.txtOTEmpID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpName" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="txtOTFormNO" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ddlOTStatus" Value="1" RecordedValue="1" CorrelationBinding="{{FormPostParam8.ddlOTStatus}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTDateBegin$txtDate" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="txtOTDateEnd$txtDate" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="gvMain$ctl02$chkChoose" Value="on" RecordedValue="on" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientWidth" Value="{{$HIDDEN1.ucModalPopup1$ClientWidth}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientHeight" Value="{{$HIDDEN1.ucModalPopup1$ClientHeight}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="1c51337d-a51a-4396-95bf-b615863f460d" Version="1.1" Url="http://10.11.36.114:8007/OverTime/OvertimePreOrder.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <FormPostHttpBody>
        <FormPostParameter Name="ToolkitScriptManager1_HiddenField" Value=";;AjaxControlToolkit, Version=4.1.7.607, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:zh-Hant:7b95ed1a-6a3f-41dd-bc5b-63f39edbc4b4:de1feab2:fcf0e993:f2c8e708:720a52bf:f9cec9bc:589eaa30:698129cf:fb9b4c57:ccb96cf9:a67c2700:8613aea7:3202a5a2:ab09e3fe:87104b7c:be6fb298" RecordedValue=";;AjaxControlToolkit, Version=4.1.7.607, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:zh-Hant:7b95ed1a-6a3f-41dd-bc5b-63f39edbc4b4:de1feab2:fcf0e993:f2c8e708:720a52bf:f9cec9bc:589eaa30:698129cf:fb9b4c57:ccb96cf9:a67c2700:8613aea7:3202a5a2:ab09e3fe:87104b7c:be6fb298" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VSTATE" Value="{{$HIDDEN1.__VSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="{{$HIDDEN1.__SCROLLPOSITIONX}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="{{$HIDDEN1.__SCROLLPOSITIONY}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEENCRYPTED" Value="{{$HIDDEN1.__VIEWSTATEENCRYPTED}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{$HIDDEN1.__EVENTVALIDATION}}" RecordedValue="dkuXY+qJuIU69+yXCD3yMBO1xp1PTBAdRoXOSRInaUIX0izyrmIidPi3yMhTDe/6EcARAiieh4IA2lnvsHZHLAWki5tuDSSt59QKnAIHBnRMEgobeWl7VnizZNK3Rqh3iCruwnGl+6kPXg+FXYhfOx1aG7FHr5XX6RRVH4RVrJlN50TocsVZuXCNRXgC2RcnFNkBHRebqRIlXVJb2h9gyPtQL40+wPcN+I5tif8U1G7yN357B93zLJAt6krNFHuuY/YeGz8ro8nhinYgkBg6gVmgPv/Cd+FHXFMF1AwUFLtOjToxVQuG+k6t4htoTTfPm3EsNIUPI5tII3StaDYfNzU0TKxm+4QU1Mk0RtLi3YVmvEczFoPnPDLyNMvNdnwchWsyUc93NbyGcYCWg1YGWOh/DIq71acLib1A20SjMcgad1Rb80JvW0LQyWgNEy2xRkzd95ENKKXwvRCzdkoCVZS0zDBYutzkp4C9ANF8EW9JNY5pTRNk4f3GbY2ExSElPqhB6cm75So6+bjqzSI2J/wDdPk72W9gEHspD5E027wlgNoNPNi4Fh/pvGWP3Z6wY4bA5Eq6O8Fu3RiWEG95sRjfEPOYMHVxkUy3UWuXA2irngElLGpcia13P8xifdzgppSi0FUOLkdnwB1hivqiz+4EJ8PHcJ/Q6vFet5uzIQ7VbDhDKX0NVuAkb8IxwQFOtnJq9MJuSH2kQ95AL6mUXAydK1GlrwG5KIx8KAjp6pnflgce4phBF0/X1KsgJcGKVom6h/S+dSeNpovbqfag8BLxtBGSbJIT5zO+gavVXJyBDgc6/F7he67VuOwmHo2NiVQC4xnTfOBwH6unV1ru6fJil/z1VGwEOqMok4Apdsnwg94JvqS6bCBkuEKuqtF4bOxqvmd5+S0LSiq/ptFsVscSMjL3PKg06Tuk5FDnBSuN7i/Sn3py5xC1p/rxnLtRvGADN9psmaZWyhgoUxaPwOsuSD2G+tI/eGbmVb0tRVejDXwvmQmHxgP+Q9h9LWpbQpUUJCl2iMLm4/6BURyQf5cwBmYNspKF0BsfRMZWu1bll/c1R18K9KOvi6sC+hBFN0O5zp3jE/ozXLLlGswmCyltocbIWuC2cile9trsU5lkdRhvdqpUVOsPwQVHF+ZsjTnuv+s6lT+srAgSIgjoz8UgYlZWOH4AEP05kho4oqZHELrRZXcS35QgvTlR/fbivVwsEWVoHQL+ud47ZP0sVfKtZwOOnUtW/Xt4BnD7VXJloPOPkllN+Uti6cC35M+Rnyp3i5QdqEvIRvIKC9mcD+8yAGOHW9xHjk9PIkmsCk7WRfKglqkaOV2xJaW3sEnohQPVTV4jTRHKU7ozoR9LKCvyiY6L76aybGuMMSok3uG6SufQHWULbvffoy/SH7S5RIMEPmQnwul7IPz23DAZZtNn7DWLfdIX9h6LKSGCTJ2pj5psFFKPFGGrUkIBjpee8tKremLrnoFqvhfJMQ0kqktEizx0CAHmVIPp6Q3Oy287Frmsbmc5Lz6OylfaL2xZy5MQkuE88739m+Vu+xyOrfjke7cwABX0OLPcDEMR5Ut9NGSsZFWmr/Matj4HRE7wUfLsyot2TaFlifPtZiaFnudtbLs=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ScreenWidth" Value="{{$HIDDEN1.ScreenWidth}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ScreenHeight" Value="{{$HIDDEN1.ScreenHeight}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="btnQuery" Value="查詢" RecordedValue="查詢" CorrelationBinding="{{FormPostParam1.btnQuery}}" UrlEncode="True" />
        <FormPostParameter Name="ddlOrgAndFlow" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ddlQueryConditions" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam3.ddlQueryConditions}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpID" Value="102119" RecordedValue="102119" CorrelationBinding="{{FormPostParam2.txtOTEmpID}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTEmpName" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="txtOTFormNO" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ddlOTStatus" Value="5" RecordedValue="5" CorrelationBinding="{{FormPostParam4.ddlOTStatus}}" UrlEncode="True" />
        <FormPostParameter Name="txtOTDateBegin$txtDate" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="txtOTDateEnd$txtDate" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientWidth" Value="{{$HIDDEN1.ucModalPopup1$ClientWidth}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ucModalPopup1$ClientHeight" Value="{{$HIDDEN1.ucModalPopup1$ClientHeight}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
  </Items>
  <ValidationRules>
    <ValidationRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateResponseUrl, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" DisplayName="回應 URL" Description="驗證回應 URL 在套用重新導向之後是否和記錄的回應 URL 相同。已忽略 QueryString 參數。" Level="Low" ExectuionOrder="BeforeDependents" />
    <ValidationRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleResponseTimeGoal, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" DisplayName="回應時間目標" Description="驗證此要求的回應時間是否小於或等於此要求所指定的回應時間目標。回應時間目標為零將被忽略。" Level="Low" ExectuionOrder="AfterDependents">
      <RuleParameters>
        <RuleParameter Name="Tolerance" Value="0" />
      </RuleParameters>
    </ValidationRule>
  </ValidationRules>
</WebTest>">
      <Execution id="12bfbff0-a067-441f-9dda-850268fcde95" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="不在清單中的結果" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="所有載入的結果" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="5bb2bc9f-0fc4-499f-9eb4-d5c514a4ffa9" executionId="12bfbff0-a067-441f-9dda-850268fcde95" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="12bfbff0-a067-441f-9dda-850268fcde95" testId="5bb2bc9f-0fc4-499f-9eb4-d5c514a4ffa9" testName="WebTestInsertDeleteCase01" computerName="ANSONHUANG" duration="00:00:04.9777219" startTime="2017-05-17T11:29:12.3704258+08:00" endTime="2017-05-17T11:29:27.9349258+08:00" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="12bfbff0-a067-441f-9dda-850268fcde95">
      <ResultFiles>
        <ResultFile path="WebTestInsertDeleteCase01.webtestResult" />
      </ResultFiles>
      <TestSettings name="本機" id="f0316326-3a07-479d-8058-64131c18b509">
        <Description>這些是本機測試回合的預設測試設定。</Description>
        <Execution>
          <TestTypeSpecific>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 7.0">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="Execution Agents">
          </AgentRule>
        </Execution>
        <Deployment runDeploymentRoot="YSHuang_ANSONHUANG 2017-05-17 11_29_08" />
      </TestSettings>
      <WebTestResultFilePath>YSHuang_ANSONHUANG 2017-05-17 11_29_08\In\12bfbff0-a067-441f-9dda-850268fcde95\WebTestInsertDeleteCase01.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>